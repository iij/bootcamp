(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{508:function(s,t,a){s.exports=a.p+"assets/img/figure1.959b588c.png"},580:function(s,t,a){"use strict";a.r(t);var n=a(16),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("header-table"),s._v(" "),t("h1",{attrs:{id:"page-frontmatter-title"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#page-frontmatter-title"}},[s._v("#")]),s._v(" "+s._s(s.$page.frontmatter.title))]),s._v(" "),t("h1",{attrs:{id:"目次"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#目次"}},[s._v("#")]),s._v(" 目次")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB"}},[s._v("はじめに")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E6%A6%82%E8%AB%96"}},[s._v("概論")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E3%81%AA%E3%81%9C%E3%83%86%E3%82%B9%E3%83%88%E3%82%92%E8%A1%8C%E3%81%86%E3%81%AE%E3%81%8B"}},[s._v("なぜテストを行うのか")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E5%8A%B9%E7%8E%87%E7%9A%84%E3%81%AA%E3%83%86%E3%82%B9%E3%83%88%E3%81%A8%E3%81%AF"}},[s._v("効率的なテストとは")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E3%81%84%E3%81%A4%E3%83%86%E3%82%B9%E3%83%88%E3%82%92%E4%BD%9C%E3%82%8B%E3%81%AE%E3%81%8B"}},[s._v("いつテストを作るのか")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E6%BA%96%E5%82%99"}},[s._v("準備")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#docker%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%81%AE%E7%AB%8B%E3%81%A1%E4%B8%8A%E3%81%92%E6%96%B9"}},[s._v("dockerコンテナの立ち上げ方")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E3%83%86%E3%82%B9%E3%83%88%E3%81%AE%E5%AE%9F%E8%A1%8C%E6%96%B9%E6%B3%95"}},[s._v("テストの実行")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E9%96%A2%E6%95%B0%E3%83%BB%E3%83%86%E3%82%B9%E3%83%88%E3%81%AE%E4%BF%AE%E6%AD%A3%E6%96%B9%E6%B3%95"}},[s._v("関数・テストの修正方法")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E3%83%86%E3%82%B9%E3%83%88%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B"}},[s._v("テストを実行する")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"#%E5%90%8C%E5%80%A4%E3%82%AF%E3%83%A9%E3%82%B9%E3%83%BB%E5%A2%83%E7%95%8C%E5%80%A4%E3%83%86%E3%82%B9%E3%83%88"}},[s._v("同値クラス・境界値テスト")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#api%E3%81%A8%E9%96%A2%E6%95%B0%E3%81%AE%E3%83%A2%E3%83%83%E3%82%AF"}},[s._v("APIと関数のモック")])]),s._v(" "),t("li",[t("a",{attrs:{href:"#tdd%E3%82%92%E3%82%84%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B"}},[s._v("TDDをやってみる")])])])]),s._v(" "),t("li",[t("a",{attrs:{href:"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB"}},[s._v("おわりに")])])]),s._v(" "),t("h1",{attrs:{id:"はじめに"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#はじめに"}},[s._v("#")]),s._v(" はじめに")]),s._v(" "),t("p",[s._v("本講義はdockerを使用します。\ndockerコンテナのpullには時間を要するため、概論の聴講と並行して「準備 ⇒ "),t("a",{attrs:{href:"#docker%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%81%AE%E7%AB%8B%E3%81%A1%E4%B8%8A%E3%81%92%E6%96%B9"}},[s._v("dockerコンテナの立ち上げ方")]),s._v("」を実施することを推奨します。")]),s._v(" "),t("p",[s._v("また、ローカルでのコマンド実行なのか、docker コンテナ内でのコマンド実行なのかが分かるよう、以下の記述方法を用います。\n基本的には、手を動かすのはローカル、成果物の確認 (テスト実行) は docker コンテナになります。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('### "$" で始まるものはローカルでのコマンド実行\n$ cd bootcamp/src/server-app/test-hands-on\n\n### "root@..." で始まるものは docker コンテナ内でのコマンド実行\nroot@a3f5935947a2:/# cd /test-hands-on\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("また、ファイルを開くのは以下のように vscode を前提として書いていますが、適宜お手元のエディターに読み替えていただいて問題ありません。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("### とりあえず vscode にしているが、コードを編集できれば何でもよい\n$ code ./exercises/exercise0/test_challenge.py\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h1",{attrs:{id:"概論"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概論"}},[s._v("#")]),s._v(" 概論")]),s._v(" "),t("h2",{attrs:{id:"なぜテストを行うのか"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#なぜテストを行うのか"}},[s._v("#")]),s._v(" なぜテストを行うのか")]),s._v(" "),t("p",[s._v("昨今ではIT技術が普及し、炊飯器・電子レンジ・洗濯機といった身の回りのものから、航空機や車など、普段の生活に必須になるものにまで、ソフトウェアが使用されています。\nまた、世の中に流通しているソフトウェアはテストが実施されており、その挙動で問題が起こらないことを保証されています。")]),s._v(" "),t("p",[s._v("例えばソフトウェアに対し、テストを行われていないと仮定して、個人的に運営しているブログなどで不具合が発生した場合はどうなるでしょうか。\nその不具合によってサーバがダウンしている間は、運営者に広告費が入らないなど、ある程度小規模で済みます。\n（ブログ収益で生計を立てている場合、致命的ですが。）")]),s._v(" "),t("p",[s._v("例えば自動車や医療機器などで不具合が発生してしまった場合、どうなるでしょうか。\n最悪の場合、ブレーキが効かない、医療機器のレーザーの出力が多すぎたなど、ソフトウェアの欠陥によって人命が失われてしまう可能性もあります。")]),s._v(" "),t("p",[s._v("上記2つの例を上げましたが、大なり小なり、ソフトウェアの不具合によって、どこかの誰かが被害を被ってしまいます。\nそのため、自身が作成するプログラムでは必ず動作のテストを行い、極力不具合を発生させないソフトウェアを作ることを目指す必要があります。")]),s._v(" "),t("h2",{attrs:{id:"効率的なテストとは"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#効率的なテストとは"}},[s._v("#")]),s._v(" 効率的なテストとは")]),s._v(" "),t("p",[s._v("テストを作成する場合には、不具合をなくすことも重要ですが、テストにコストをかけないことも重要になります。")]),s._v(" "),t("p",[s._v("例えば、あるプロダクトに使用される、以下のような仕様の関数"),t("code",[s._v("f(x)")]),s._v("があるとします。")]),s._v(" "),t("ul",[t("li",[s._v("関数"),t("code",[s._v("f")]),s._v("は、任意の数字"),t("code",[s._v("x")]),s._v("の値を取ります。")]),s._v(" "),t("li",[s._v("任意の数字"),t("code",[s._v("x")]),s._v("は、int型であり、 "),t("em",[s._v("-2,147,483,648")]),s._v(" から "),t("em",[s._v("2,147,483,647")]),s._v(" の範囲の値を格納できます。")]),s._v(" "),t("li",[s._v("関数"),t("code",[s._v("f")]),s._v("は、与えられた数字が "),t("em",[s._v("0")]),s._v(" から "),t("em",[s._v("100")]),s._v(" の間であれば"),t("code",[s._v("True")]),s._v("、そうでなければ"),t("code",[s._v("False")]),s._v("を返却します。")])]),s._v(" "),t("p",[s._v("上記の"),t("code",[s._v("f(x)")]),s._v("の挙動を100%確かめるためには、 "),t("em",[s._v("4,294,967,296")]),s._v(" 件のテストを行わなければなりません。\nしかし、実際のプロダクトを作成する場合、1つの関数に対し40億回もテストを実施してしまうと、プロダクトの売上以上に人件費や計算機の運用コストがかかってしまい、会社は倒産の危機に瀕してしまいます。")]),s._v(" "),t("p",[s._v("そのため、後述する「同値クラス・境界値テスト」などの手法によって、最低限かつ最適な回数でテストを行うことが求められます。")]),s._v(" "),t("h2",{attrs:{id:"いつテストを作るのか"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#いつテストを作るのか"}},[s._v("#")]),s._v(" いつテストを作るのか")]),s._v(" "),t("p",[s._v("開発を行う際、ウォーターフォール型の開発では、下記の流れになるかと思います。\n右下向きの矢印が設計工程、中央が開発工程、右上向きの矢印がテスト工程になります。")]),s._v(" "),t("p",[t("img",{attrs:{src:a(508),alt:"figure1.png",title:"figure1"}})]),s._v(" "),t("p",[s._v("設計における各要素は、テスト工程の各要素に対応することになります。\n例えば、まずは要求定義を行い、ソフトウェアに必要な要件を決めますが、この時点で明確な要件が定義できているのであれば、システムテストで実施するテスト項目を作成しておくことができます。")]),s._v(" "),t("p",[s._v("このように各設計段階でテスト項目を作成することで、要件に沿ったテストを作成することができます。\n（何年も開発を行っているとわかるのですが、ものを作ってからテストを作成すると、「今動くものを通すテスト」を無意識的に書いてしまい、要件も網羅できないテストを作ってしまう傾向が出てきます。）")]),s._v(" "),t("p",[s._v("また、後述するTDD（テスト駆動開発）のように、テストを作成しながら開発を進める手法もあります。")]),s._v(" "),t("p",[s._v("今回のハンズオンではコーディング・単体テスト段階で実施するテストプログラミングをやってみましょう。")]),s._v(" "),t("h1",{attrs:{id:"準備"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#準備"}},[s._v("#")]),s._v(" 準備")]),s._v(" "),t("h2",{attrs:{id:"dockerコンテナの立ち上げ方"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dockerコンテナの立ち上げ方"}},[s._v("#")]),s._v(" dockerコンテナの立ち上げ方")]),s._v(" "),t("p",[s._v("下記のコマンドでdockerコンテナを立ち上げます。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('### リポジトリのクローン (既にある場合はスキップで OK)\n$ git clone https://github.com/iij/bootcamp.git\n$ cd bootcamp/src/server-app/test-hands-on\n### clone をスキップした場合は、リポジトリを最新化\n$ git pull\n\n### コンテナの立ち上げ\n$ docker compose up --build\n\n### 以下のように出力されたら OK.\n(中略)\n ✔ Network test-hands-on_default            Created  0.0s\n ✔ Container test-hands-on-bootcamp-test-1  Created  0.0s\nAttaching to bootcamp-test-1\nbootcamp-test-1  | Python 3.12.4 (main, Aug  1 2024, 21:02:17) [GCC 12.2.0] on linux\nbootcamp-test-1  | Type "help", "copyright", "credits" or "license" for more information.\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("h2",{attrs:{id:"テストの実行方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#テストの実行方法"}},[s._v("#")]),s._v(" テストの実行方法")]),s._v(" "),t("p",[s._v("まずは単純な例で、テストの実行と修正をやってみましょう。")]),s._v(" "),t("p",[s._v("「"),t("a",{attrs:{href:"#docker%E3%82%B3%E3%83%B3%E3%83%86%E3%83%8A%E3%81%AE%E7%AB%8B%E3%81%A1%E4%B8%8A%E3%81%92%E6%96%B9"}},[s._v("dockerコンテナの立ち上げ方")]),s._v("」で、起動中のコンソールとは別のコンソールを開き、実行中のコンテナにアクセスします。\nコマンドを実行すると、コンテナ内のbashが実行されます。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ cd bootcamp/src/server-app/test-hands-on\n$ docker compose exec bootcamp-test bash\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("下記のコマンドで、テストを実行してみましょう。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('### コードは全て"/test-hands-on"配下にあります。\nroot@a3f5935947a2:/# cd /test-hands-on\n\n### 任意のテストを実行します。\nroot@a3f5935947a2:/test-hands-on# python -m unittest -v exercises.exercise0.test_challenge\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h2",{attrs:{id:"関数・テストの修正方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#関数・テストの修正方法"}},[s._v("#")]),s._v(" 関数・テストの修正方法")]),s._v(" "),t("p",[s._v("「テストの実行方法」の項でテストを行うと、初回は下記のようにテストが失敗してしまいます。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("root@a3f5935947a2:/test-hands-on# python -m unittest -v exercises.exercise0.test_challenge\ntest_success (exercises.exercise0.test_challenge.HelloTestCase.test_success) ... FAIL\n\n======================================================================\nFAIL: test_success (exercises.exercise0.test_challenge.HelloTestCase.test_success)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/test-hands-on/exercises/exercise0/test_challenge.py\", line 7, in test_success\n    self.assertEqual(hello(), \"hello iij-bootcamp\")\nAssertionError: 'hello world' != 'hello iij-bootcamp'\n- hello world\n+ hello iij-bootcamp\n\n\n----------------------------------------------------------------------\nRan 1 test in 0.001s\n\nFAILED (failures=1)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("p",[s._v("テストコードを開いて確認してみましょう。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ cd bootcamp/src/server-app/test-hands-on\n$ code ./exercises/exercise0/test_challenge.py\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("内容は下記のようになっており、コード内でimportしている "),t("code",[s._v("hello()")]),s._v(' 関数に対し、文字列 "hello iij-bootcamp" が来ることを期待してテストを行っているようです。')]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" unittest\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("challenge "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" hello\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HelloTestCase")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unittest"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("TestCase"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test_success")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hello"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello iij-bootcamp"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("では次に、テスト対象である "),t("code",[s._v("hello()")]),s._v(" 関数を見てみましょう。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ code ./exercises/exercise0/challenge.py\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v('どうやら、この関数は文字列"hello world"を返すようです。')]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hello")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello world"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("しかし、これではテストコードで期待されている関数の返り値と、実際の関数の返り値が異なってしまっています。")]),s._v(" "),t("p",[s._v("ちなみにテストコードは、対象の関数やインスタンスが動作したときにどういった振る舞いをするのかを具体的に表現したもの、「動く仕様書」であると考えることができます。\nこの考えからいくと、今回は仕様を表現している (期待値を書いている) テストコードが正であり、実装に不具合があるといえます。")]),s._v(" "),t("p",[s._v('それでは、テストが失敗する (期待する振る舞いになっていない) 原因である、return 値 "hello world" を "hello iij-bootcamp" に変えてみましょう。')]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hello")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello iij-bootcamp"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("もう一度テストを実行してみると、先程まで失敗していたテストが成功しました。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("root@a3f5935947a2:/test-hands-on# python -m unittest -v exercises.exercise0.test_challenge\ntest_success (exercises.exercise0.test_challenge.HelloTestCase.test_success) ... ok\n\n----------------------------------------------------------------------\nRan 1 test in 0.000s\n\nOK\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("このように、テストコードというものは、テストを実施したい関数に対して動作を確認するように作成・実行します。\nそして動作に問題があれば、適宜実装を (場合によってはテストコードも) 修正していくことになります。")]),s._v(" "),t("p",[s._v("本講義では、テストを実施したい関数に対し、テストコードで期待する返り値を設定し、関数の動作確認を行っていきます。")]),s._v(" "),t("p",[s._v("ちなみに、ローカルでのコードの変更は、コンテナ内にも自動で同期されます。\n以降はローカルでファイルを変更し、コンテナ内でテストを実行してみましょう。")]),s._v(" "),t("h1",{attrs:{id:"テストを実行する"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#テストを実行する"}},[s._v("#")]),s._v(" テストを実行する")]),s._v(" "),t("h2",{attrs:{id:"_1-同値クラス・境界値テスト"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-同値クラス・境界値テスト"}},[s._v("#")]),s._v(" 1. 同値クラス・境界値テスト")]),s._v(" "),t("p",[s._v("この項では「同値クラステスト」と「境界値テスト」という手法のテストを実施し、効率的なテストについて学びます。")]),s._v(" "),t("h3",{attrs:{id:"同値クラステストとは"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#同値クラステストとは"}},[s._v("#")]),s._v(" 同値クラステストとは")]),s._v(" "),t("p",[s._v("同値クラステストとは「任意の関数"),t("code",[s._v("g(x)")]),s._v("の引数"),t("code",[s._v("x")]),s._v("に対し、有効である値、無効である値のグループ（有効同値クラス、無効同値クラス）を定義してテストを実施する」ものになります。")]),s._v(" "),t("p",[s._v("例えば、本書の冒頭で出てきた、関数"),t("code",[s._v("f(x)")]),s._v("では、"),t("code",[s._v("x")]),s._v("の値が "),t("em",[s._v("0")]),s._v(" から "),t("em",[s._v("100")]),s._v(" の間であれば有効同値クラス、そうでなければ無効同値クラス、と定義できます。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("関数fは、任意の数字xの値を取ります。\n任意の数字xは、int型であり、 -2,147,483,648 から 2,147,483,647 の範囲の値を格納できます。\n関数fは、与えられた数字が 0 から 100 の間であればTrue、そうでなければFalseを返却します。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("仮に「有効同値クラス内の値が入力された場合は正常終了、無効同値クラス内の値が入力された場合は異常終了する」と見た場合、終了の仕方は「正常終了か異常終了か」の2択と見ることができます。")]),s._v(" "),t("p",[s._v("すなわち、関数"),t("code",[s._v("f(x)")]),s._v("に対する同値クラステストとは、有効同値である "),t("em",[s._v("10")]),s._v(" , "),t("em",[s._v("50")]),s._v(" , "),t("em",[s._v("90")]),s._v(" など、いくつかの値のグループと、無効同値である "),t("em",[s._v("-500")]),s._v(" , "),t("em",[s._v("-10")]),s._v(" , "),t("em",[s._v("110")]),s._v(" , "),t("em",[s._v("500")]),s._v(" などの値のグループのテストを実施すればよいことになります。")]),s._v(" "),t("h3",{attrs:{id:"境界値テストとは"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#境界値テストとは"}},[s._v("#")]),s._v(" 境界値テストとは")]),s._v(" "),t("p",[s._v("同値クラステストでは「有効/無効と定義した値に対する処理が正しく動くか」を確認できました。")]),s._v(" "),t("p",[s._v("しかし、これでは「有効/無効の範囲は正しいか」が確認できていません。\nこういった場合は境界値テストを実施し、有効値/無効値の境界が、正しく実行されるかのテストを行います。")]),s._v(" "),t("p",[s._v("本書冒頭の関数"),t("code",[s._v("f(x)")]),s._v("を例にすると、下限の境界値は "),t("em",[s._v("-1")]),s._v(" , "),t("em",[s._v("0")]),s._v(" 、上限の境界値は "),t("em",[s._v("100")]),s._v(" , "),t("em",[s._v("101")]),s._v(" となります。")]),s._v(" "),t("h3",{attrs:{id:"テスト実装例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#テスト実装例"}},[s._v("#")]),s._v(" テスト実装例")]),s._v(" "),t("p",[s._v("本書冒頭で定義した、関数"),t("code",[s._v("f(x)")]),s._v("がPythonで以下のように定義されているとします。")]),s._v(" "),t("p",[t("code",[s._v("exercies/sample1/sample.py")]),s._v(" を作成してみましょう。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ cd exercies/\n$ mkdir sample1\n$ cd sample1\n$ code ./sample.py\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("上記の関数に対し、同値クラスのテストを定義すると、下記のように書くことができます。\n下記のテストでは、関数"),t("code",[s._v("f(x)")]),s._v("に有効同値クラスの値を入力すると"),t("code",[s._v("True")]),s._v("、そうでない値を入力すると"),t("code",[s._v("False")]),s._v("が返却されることを確認しています。")]),s._v(" "),t("p",[t("code",[s._v("exercies/sample1/test_sample.py")]),s._v(" を作成してみましょう。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ code ./test_sample.py\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" unittest\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sample "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" f\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ExampleTestCase")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unittest"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("TestCase"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test_equivalence_partitioning")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 有効同値のテスト")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("90")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 無効同値のテスト")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("500")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("110")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("500")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("p",[s._v("境界値テストを定義すると、下記のように書くことができます。\n下記のテストでは、関数"),t("code",[s._v("f(x)")]),s._v("に下限の境界値 "),t("em",[s._v("-1")]),s._v(" , "),t("em",[s._v("0")]),s._v(" 、上限の境界値 "),t("em",[s._v("100")]),s._v(" , "),t("em",[s._v("101")]),s._v(" を入力し、適宜"),t("code",[s._v("True")]),s._v("か"),t("code",[s._v("False")]),s._v("が返却されることを確認しています。")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" unittest\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sample "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" f\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ExampleTestCase")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unittest"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("TestCase"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test_equivalence_partitioning")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 有効同値のテスト")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ... 略")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 無効同値のテスト")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ... 略")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 下限の境界値")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 上限の境界値")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("p",[s._v("docker コンテナ内からテスト実行してみましょう。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("root@a3f5935947a2:/test-hands-on# python -m unittest -v exercises.sample1.test_sample\ntest_equivalence_partitioning (exercises.sample1.test_sample1.ExampleTestCase.test_equivalence_partitioning) ... ok\n\n----------------------------------------------------------------------\nRan 1 test in 0.000s\n\nOK\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"問題にチャレンジしよう"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#問題にチャレンジしよう"}},[s._v("#")]),s._v(" 問題にチャレンジしよう")]),s._v(" "),t("p",[t("code",[s._v("exercises/exercise1/challenge.py")]),s._v("に、商品の申し込みを行う関数"),t("code",[s._v("apply(quantity)")]),s._v("が定義されています。")]),s._v(" "),t("p",[s._v("関数は以下の仕様になっています。")]),s._v(" "),t("ul",[t("li",[s._v("この関数は、int型の引数"),t("code",[s._v("quantity")]),s._v("を取ります。")]),s._v(" "),t("li",[s._v("関数"),t("code",[s._v("apply()")]),s._v("は、10以上、100以下の値が入力されると、申し込みが成功し、文字列"),t("code",[s._v('"accepted"')]),s._v("が返却されます。")]),s._v(" "),t("li",[s._v("申し込みに失敗した場合は、文字列"),t("code",[s._v('"not accepted"')]),s._v("が返却されます。")]),s._v(" "),t("li",[s._v("int型以外のデータが入力された場合、例外"),t("code",[s._v("TypeError()")]),s._v("が発生し、プログラムが異常終了します。")])]),s._v(" "),t("p",[t("code",[s._v("exercises/exercise1/test_challenge.py")]),s._v("に、作成途中のテストクラス"),t("code",[s._v("ApplyTestCase")]),s._v("が定義されているため、関数"),t("code",[s._v("apply(quantity)")]),s._v("に対するテストを作成してみましょう。")]),s._v(" "),t("h2",{attrs:{id:"_2-apiと関数のモック"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-apiと関数のモック"}},[s._v("#")]),s._v(" 2. APIと関数のモック")]),s._v(" "),t("p",[s._v("この項では、Pythonで実行できるAPI（FastAPI）のフレームワークを使用し、APIに対するテストや、関数のモックに触れてみましょう。")]),s._v(" "),t("h3",{attrs:{id:"モックとは"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#モックとは"}},[s._v("#")]),s._v(" モックとは")]),s._v(" "),t("p",[s._v("「モックアップ」の略称であり、工業製品などの試作や、店頭展示などのためにつくられる実物大模型のことを指します。\n「"),t("a",{attrs:{href:"https://dictionary.goo.ne.jp/word/%e3%83%a2%e3%83%83%e3%82%af%e3%82%a2%e3%83%83%e3%83%97/",target:"_blank",rel:"noopener noreferrer"}},[s._v("goo辞書 モックアップ（mock-up）"),t("OutboundLink")],1),s._v("」より")]),s._v(" "),t("p",[s._v("テストにおけるモックとは、主にクラスや関数の動作をシミュレートするためのオブジェクトになります。")]),s._v(" "),t("p",[s._v("例えば、以下のような仕様の関数"),t("code",[s._v("rock_paper_scissors(shoot)")]),s._v("があるとします。")]),s._v(" "),t("ul",[t("li",[s._v("関数"),t("code",[s._v("rock_paper_scissors(shoot)")]),s._v("は、じゃんけんを行う関数で、引数"),t("code",[s._v("shoot")]),s._v('は文字列"rock", "paper", "scissors"の、いずれかを取ります。')]),s._v(" "),t("li",[s._v("関数"),t("code",[s._v("rock_paper_scissors()")]),s._v("は、内部で引数に対してじゃんけんの手を出す関数"),t("code",[s._v("my_shoot()")]),s._v("が実行されます。")]),s._v(" "),t("li",[s._v("関数"),t("code",[s._v("my_shoot()")]),s._v("は、それぞれ "),t("em",[s._v("1/3")]),s._v(' の確率で"rock", "paper", "scissors"のいずれかを取得します。')]),s._v(" "),t("li",[s._v("関数"),t("code",[s._v("rock_paper_scissors()")]),s._v("は、入力された引数"),t("code",[s._v("shoot")]),s._v("が、関数"),t("code",[s._v("my_shoot()")]),s._v("の返り値に勝利できる場合 "),t("em",[s._v("1")]),s._v(" 、引き分けであれば "),t("em",[s._v("0")]),s._v(" 、敗北であれば "),t("em",[s._v("-1")]),s._v(" を返します。")])]),s._v(" "),t("p",[s._v("上記の関数"),t("code",[s._v("rock_paper_scissors()")]),s._v("をテストする場合、内部の関数の返り値が乱数で決定されてしまうため、通常であればテストが実行できません。\n（例えば、1回目の"),t("code",[s._v("my_shoot()")]),s._v('を実行した時に"rock"が返却されたとしても、2回目も"rock"が返却されるとは限らないですよね）')]),s._v(" "),t("p",[s._v("こういった場合、関数のモックを使用して、テスト対象の関数内で使用されているクラスや関数をモックし、返り値を固定してシミュレーションを行う必要があります。")]),s._v(" "),t("h3",{attrs:{id:"テスト実装例-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#テスト実装例-2"}},[s._v("#")]),s._v(" テスト実装例")]),s._v(" "),t("p",[s._v("関数"),t("code",[s._v("rock_paper_scissors(shoot)")]),s._v("が、Pythonで以下のように定義されているとします。")]),s._v(" "),t("p",[t("code",[s._v("exercies/sample2/sample.py")]),s._v(" を作成してみましょう。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ cd exercies/\n$ mkdir sample2\n$ cd sample2\n$ code ./sample.py\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" random\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("_my_shoot")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    choices "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rock"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"paper"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"scissors"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" random"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("choice"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("choices"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rock_paper_scissors")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("shoot"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# 1/3で"rock", "paper", "scissors"が格納される')]),s._v("\n    my_shoot_result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" _my_shoot"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# あいこ")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" shoot "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" my_shoot_result"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 勝利")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" shoot "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rock"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("and")]),s._v(" my_shoot_result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"scissors"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" shoot "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"paper"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("and")]),s._v(" my_shoot_result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rock"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" shoot "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"scissors"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("and")]),s._v(" my_shoot_result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"paper"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 敗北")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br")])]),t("p",[s._v("上記の関数に対し、モックを使用したテストを定義すると、下記のように書くことができます。")]),s._v(" "),t("p",[t("code",[s._v("exercies/sample2/test_sample.py")]),s._v(" を作成してみましょう。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ code ./test_sample.py\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" unittest\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" unittest "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" mock\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" sample\n\nrock_paper_scissors "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sample"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rock_paper_scissors\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ExampleTestCase")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unittest"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("TestCase"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test_rock_paper_scissors")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# あいこのテスト")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("with")]),s._v(" mock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("patch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sample"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'_my_shoot'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" return_value"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rock"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("rock_paper_scissors"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rock"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 勝利のテスト")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("with")]),s._v(" mock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("patch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sample"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'_my_shoot'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" return_value"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"scissors"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("rock_paper_scissors"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rock"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 敗北のテスト")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("with")]),s._v(" mock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("patch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("object")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sample"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'_my_shoot'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" return_value"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"paper"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("rock_paper_scissors"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rock"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])]),t("p",[s._v("docker コンテナ内から実行してみましょう。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("root@a3f5935947a2:/test-hands-on# python -m unittest -v exercises.sample2.test_sample\ntest_rock_paper_scissors (exercises.sample2.test_sample2.ExampleTestCase.test_rock_paper_scissors) ... ok\n\n----------------------------------------------------------------------\nRan 1 test in 0.000s\n\nOK\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"fastapiについて"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fastapiについて"}},[s._v("#")]),s._v(" FastAPIについて")]),s._v(" "),t("p",[s._v("IIJ Bootcamp「FastAPI でwebアプリを作る」にて紹介されているため、詳細の説明は省きます。")]),s._v(" "),t("p",[s._v("下記「テスト実装例」にサンプルを記載するように、簡単にAPIを実装できるフレームワークになっています。")]),s._v(" "),t("h3",{attrs:{id:"テスト実装例-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#テスト実装例-3"}},[s._v("#")]),s._v(" テスト実装例")]),s._v(" "),t("p",[s._v("FastAPIは、下記のようにAPIを実装できます。\n下記は、ブラウザで"),t("code",[s._v("http://localhost:8000/hello")]),s._v("にアクセスすると、データ"),t("code",[s._v('{"response": "hello"}')]),s._v("を返却します。")]),s._v(" "),t("p",[t("code",[s._v("exercies/sample3/sample.py")]),s._v(" を作成してみましょう。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ cd exercies/\n$ mkdir sample3\n$ cd sample3\n$ code ./sample.py\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" fastapi "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" FastAPI\n\napp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" FastAPI"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[s._v("@app"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("get_hello")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"response"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("上記のAPIに対し、HTTPステータスやレスポンスを検証するテストは、下記のように書くことができます。")]),s._v(" "),t("p",[t("code",[s._v("exercies/sample3/test_sample.py")]),s._v(" を作成してみましょう。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ code ./test_sample.py\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" unittest\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" fastapi"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("testclient "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" TestClient\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" sample\n\nclient "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" TestClient"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sample"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("app"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ExampleTestCase")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unittest"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("TestCase"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test_api")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# パス"/hello"に接続する')]),s._v("\n        res "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" client"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# HTTPステータスと、レスポンスの取得")]),s._v("\n        status "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" res"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("status_code\n        data "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" res"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("json"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# HTTPステータスと、レスポンスの検証")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("status"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"response"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("p",[s._v("docker コンテナ内から実行してみましょう。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("root@233072c168ae:/test-hands-on# python -m unittest -v exercises.sample3.test_sample\ntest_api (exercises.sample3.test_sample.ExampleTestCase.test_api) ... ok\n\n----------------------------------------------------------------------\nRan 1 test in 0.003s\n\nOK\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"問題にチャレンジしよう-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#問題にチャレンジしよう-2"}},[s._v("#")]),s._v(" 問題にチャレンジしよう")]),s._v(" "),t("p",[t("code",[s._v("exercises/exercise2/challenge.py")]),s._v("に、FastAPIと、いくつかのエンドポイントが定義されています。")]),s._v(" "),t("p",[s._v("上記のAPIは、コンテナから下記のコマンドで実行することができます。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('root@233072c168ae:/test-hands-on# python3 -m uvicorn exercises.exercise2.challenge:app --reload --host "0.0.0.0"\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("API実行後は、ブラウザに下記のURLを入力すると、APIにアクセスできます。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("http://localhost:8000/\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("また、APIは下記のエンドポイントがあります。")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("パス")]),s._v(" "),t("th",[s._v("詳細")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("/")]),s._v(" "),t("td",[t("code",[s._v('{"message": "hello world"}')]),s._v("が返却されます。")])]),s._v(" "),t("tr",[t("td",[s._v("/echo/{data}")]),s._v(" "),t("td",[t("code",[s._v('{"message": "got the message: {data}"}')]),s._v("が返却されます。"),t("br"),s._v("※"),t("code",[s._v("{data}")]),s._v("は、任意の値が代入されます。")])]),s._v(" "),t("tr",[t("td",[s._v("/gacha")]),s._v(" "),t("td",[t("code",[s._v('{"message": "{result}"')]),s._v("が返却されます。"),t("br"),s._v("※"),t("code",[s._v("{result}")]),s._v("は、 "),t("em",[s._v("1/100")]),s._v(' で文字列"you win"、それ以外で文字列"you lose"が代入されます。')])])])]),s._v(" "),t("p",[t("code",[s._v("exercises/exercise2/test_challenge.py")]),s._v("に、作成途中のテストクラス"),t("code",[s._v("ApiTestCase")]),s._v("が定義されているため、上記の仕様のAPIに対するテストを作成してみましょう。")]),s._v(" "),t("h2",{attrs:{id:"_3-tddをやってみる"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-tddをやってみる"}},[s._v("#")]),s._v(" 3. TDDをやってみる")]),s._v(" "),t("p",[s._v("TDDとは、「テスト駆動開発( "),t("em",[s._v("Test Driven Development")]),s._v(" )」のことを指し「イテレーティブ (反復的) な手順」と「インクリメンタル (少しずつ着実) な設計」を組み合わせて開発を行う、反復型の "),t("strong",[s._v("開発手法")]),s._v(" のことになります。(※テスト手法のことではない)")]),s._v(" "),t("h3",{attrs:{id:"tddのやり方"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tddのやり方"}},[s._v("#")]),s._v(" TDDのやり方")]),s._v(" "),t("p",[s._v("TDDは、下記のサイクルで開発を行っていきます。")]),s._v(" "),t("ol",{attrs:{start:"0"}},[t("li",[s._v("準備\n"),t("ul",[t("li",[s._v("必要になりそうなテスト (実装したい振る舞い) を TODO リストとして書き出す")])])]),s._v(" "),t("li",[s._v("Red\n"),t("ul",[t("li",[s._v("TODO リストから 1 つ選び、テストから書き (テストファースト)、そのテストを実行して失敗させる")])])]),s._v(" "),t("li",[s._v("Green\n"),t("ul",[t("li",[s._v("迅速に、テストを実行できるコードを書いてテストを通すようにする (※このとき、コードが汚くても良い)")])])]),s._v(" "),t("li",[s._v("Refactoring\n"),t("ul",[t("li",[s._v("Green を保ったまま、コードをきれいにする")])])]),s._v(" "),t("li",[s._v("フィードバック\n"),t("ul",[t("li",[t("em",[s._v("3.")]),s._v(" まで終わったら、気付きを TODO リストに反映し、1. に戻る")])])])]),s._v(" "),t("p",[s._v("上記 "),t("em",[s._v("1. ~ 4.")]),s._v(" のサイクルを反復的に実行することで、自動テストによってとりあえず動くことが保証され、かつリファクタリングによってきれいになっていくコードを、少しずつ着実に作って (設計して) いきます。")]),s._v(" "),t("h3",{attrs:{id:"テスト実装例-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#テスト実装例-4"}},[s._v("#")]),s._v(" テスト実装例")]),s._v(" "),t("p",[s._v("例えば、以下の仕様のプログラムを作りたいとして、実際に TDD による開発を体験してみましょう。")]),s._v(" "),t("ul",[t("li",[s._v('実行回数が 3 の倍数なら "Fizz"、5 の倍数なら "Buzz"、両方を満たすなら "FizzBuzz" を返す')]),s._v(" "),t("li",[s._v("実行回数は内部でカウントする")]),s._v(" "),t("li",[s._v("3 でも 5 の倍数でもないカウントに対しては、そのカウント数を返す")])]),s._v(" "),t("h3",{attrs:{id:"サイクル-1-todoリスト"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#サイクル-1-todoリスト"}},[s._v("#")]),s._v(" サイクル(1) TODOリスト")]),s._v(" "),t("p",[s._v("コーディングする際、何もない状態で、何も考えずにいきなりコードを書き始めることはあまり多くありません。\nTDD も例外ではなく、まずはやること (TODO) リストを作るところから始めます。")]),s._v(" "),t("p",[s._v("愚直に整理してみると、以下のようになりそうです。")]),s._v(" "),t("ul",[t("li",[s._v("[ ] 実行回数を内部で保持し、カウントする")]),s._v(" "),t("li",[s._v("[ ] 実行すると、カウント数を返す")]),s._v(" "),t("li",[s._v('[ ] 実行回数が 3 の倍数なら、カウント数の代わりに "Fizz" を返す')]),s._v(" "),t("li",[s._v('[ ] 実行回数が 5 の倍数なら、カウント数の代わりに "Buzz" を返す')]),s._v(" "),t("li",[s._v('[ ] 実行回数が 3 と 5 両方の倍数なら、カウント数の代わりに "FizzBuzz" を返す')])]),s._v(" "),t("p",[s._v("TODO リストが整理できたところで、"),t("code",[s._v("exercises/sample4/sample.py")]),s._v(" と "),t("code",[s._v("exercises/sample4/test_sample.py")]),s._v(" を作成し、サイクル(1) に進みましょう。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$ cd exercies/\n$ mkdir sample4\n$ cd sample4\n$ code ./sample.py\n$ code ./test_sample.py\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h3",{attrs:{id:"サイクル-1-red"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#サイクル-1-red"}},[s._v("#")]),s._v(" サイクル(1) Red")]),s._v(" "),t("p",[s._v("TODO リストから 1 つ選びます。")]),s._v(" "),t("blockquote",[t("ul",[t("li",[s._v("[ ] 実行すると、カウント数を返す")])])]),s._v(" "),t("p",[s._v("最初は、この仕様の実装に向けてサイクルを回してみましょう。")]),s._v(" "),t("p",[s._v("Red でやるべきは「失敗するテストを書く」でした。")]),s._v(" "),t("blockquote",[t("ol",[t("li",[s._v("Red\n"),t("ul",[t("li",[s._v("TODO リストから 1 つ選び、テストから書き (テストファースト)、そのテストを実行して失敗させる")])])])])]),s._v(" "),t("p",[s._v("とにかく仕様をテストコードで表現してみるというのが、ここでやるべきことです。")]),s._v(" "),t("p",[s._v("とりあえず1回目の実行では「1」が返ってくるはずなので、テストでは「1」を期待してみます。\n"),t("code",[s._v("FizzBuzz")]),s._v(" クラスに、"),t("code",[s._v("increment_counter()")]),s._v(" メソッドがあると仮定して、"),t("code",[s._v("test_sample.py")]),s._v(" を書いてみましょう。")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" unittest\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sample "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" FizzBuzz\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TestFizzBuzz")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unittest"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("TestCase"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test_increment_counter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        fizzbuzz "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" FizzBuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        expected "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("expected"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("テスト実行してみると、そもそも実装がないので当然エラーになります。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('root@233072c168ae:/test-hands-on# python -m unittest -v exercises.sample4.test_sample\ntest_sample (unittest.loader._FailedTest.test_sample) ... ERROR\n\n======================================================================\nERROR: test_sample (unittest.loader._FailedTest.test_sample)\n----------------------------------------------------------------------\nImportError: Failed to import test module: test_sample\nTraceback (most recent call last):\n  File "/usr/local/lib/python3.12/unittest/loader.py", line 137, in loadTestsFromName\n    module = __import__(module_name)\n             ^^^^^^^^^^^^^^^^^^^^^^^\n  File "/test-hands-on/exercises/sample4/test_sample.py", line 2, in <module>\n    from .sample import FizzBuzz\nModuleNotFoundError: No module named \'exercises.sample4.sample\'\n\n\n----------------------------------------------------------------------\nRan 1 test in 0.000s\n\nFAILED (errors=1)\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])]),t("h3",{attrs:{id:"サイクル-1-green"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#サイクル-1-green"}},[s._v("#")]),s._v(" サイクル(1) Green")]),s._v(" "),t("p",[s._v("次は「とりあえず動くコード」を目指します。")]),s._v(" "),t("blockquote",[t("ol",{attrs:{start:"2"}},[t("li",[s._v("Green\n"),t("ul",[t("li",[s._v("迅速に、テストを実行できるコードを書いてテストを通すようにする (※このとき、コードが汚くても良い)")])])])])]),s._v(" "),t("p",[s._v("とにかくテストを通すようなコードを最短距離で書くというのが、ここでやるべきことです。")]),s._v(" "),t("p",[s._v("テストでは 1 が返却されることを期待していますので、"),t("code",[s._v("sample.py")]),s._v(" に実装を書いて、1 を返すようにしてみましょう。")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FizzBuzz")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("increment_counter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("テスト実行してみると、成功するようになりました。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("root@233072c168ae:/test-hands-on# python -m unittest -v exercises.sample4.test_sample\ntest_increment_counter (exercises.sample4.test_sample.TestFizzBuzz.test_increment_counter) ... ok\n\n----------------------------------------------------------------------\nRan 1 test in 0.000s\n\nOK\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"サイクル-1-refactoring"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#サイクル-1-refactoring"}},[s._v("#")]),s._v(" サイクル(1) Refactoring")]),s._v(" "),t("blockquote",[t("ol",{attrs:{start:"3"}},[t("li",[s._v("Refactoring\n"),t("ul",[t("li",[s._v("Green を保ったまま、コードをきれいにする")])])])])]),s._v(" "),t("p",[s._v("次は、「動作するきれいなコード」を目指します。\n今回、あまり直すところはないですが、テストコードに一部冗長なところがあるのでインライン化してみましょう。")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" unittest\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sample "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" FizzBuzz\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TestFizzBuzz")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unittest"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("TestCase"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test_increment_counter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        fizzbuzz "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" FizzBuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# expected をインライン化")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("テスト実行してみると、成功したままなので OK です。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("root@233072c168ae:/test-hands-on# python -m unittest -v exercises.sample4.test_sample\ntest_increment_counter (exercises.sample4.test_sample.TestFizzBuzz.test_increment_counter) ... ok\n\n----------------------------------------------------------------------\nRan 1 test in 0.000s\n\nOK\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"サイクル-1-フィードバック"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#サイクル-1-フィードバック"}},[s._v("#")]),s._v(" サイクル(1) フィードバック")]),s._v(" "),t("p",[s._v("TODO リストを見直してみると、サイクル(1) を回しきったことで仕様を満たせているものはなさそうですが、とりあえずの仮実装はできていそうです。")]),s._v(" "),t("ul",[t("li",[s._v("[ ] 実行回数を内部で保持し、カウントする")]),s._v(" "),t("li",[s._v("[ ] 実行すると、カウント数を返す\n"),t("ul",[t("li",[s._v("[x] とりあえず 1 を返す (仮実装)")])])]),s._v(" "),t("li",[s._v('[ ] 実行回数が 3 の倍数なら、カウント数の代わりに "Fizz" を返す')]),s._v(" "),t("li",[s._v('[ ] 実行回数が 5 の倍数なら、カウント数の代わりに "Buzz" を返す')]),s._v(" "),t("li",[s._v('[ ] 実行回数が 3 と 5 両方の倍数なら、カウント数の代わりに "FizzBuzz" を返す')])]),s._v(" "),t("p",[s._v("では、次のサイクルにいきましょう。")]),s._v(" "),t("h3",{attrs:{id:"サイクル-2-red"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#サイクル-2-red"}},[s._v("#")]),s._v(" サイクル(2) Red")]),s._v(" "),t("p",[s._v("2サイクル目に来ました。")]),s._v(" "),t("p",[s._v("引き続き、"),t("code",[s._v("increment_counter()")]),s._v(" の実装を進めていきます。")]),s._v(" "),t("blockquote",[t("ul",[t("li",[s._v("[ ] 実行すると、カウント数を返す")])])]),s._v(" "),t("p",[s._v("実行回数毎にカウントアップする仕様ですから、何度か実行してみて、期待する値を増加させてみましょう。")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" unittest\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sample "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" FizzBuzz\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TestFizzBuzz")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unittest"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("TestCase"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test_increment_counter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        fizzbuzz "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" FizzBuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("p",[s._v("テスト実行してみると、対応する実装がないので失敗しました。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('root@233072c168ae:/test-hands-on# python -m unittest -v exercises.sample4.test_sample\ntest_increment_counter (exercises.sample4.test_sample.TestFizzBuzz.test_increment_counter) ... FAIL\n\n======================================================================\nFAIL: test_increment_counter (exercises.sample4.test_sample.TestFizzBuzz.test_increment_counter)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/test-hands-on/exercises/sample4/test_sample.py", line 9, in test_increment_counter\n    self.assertEqual(fizzbuzz.increment_counter(), 2)\nAssertionError: 1 != 2\n\n----------------------------------------------------------------------\nRan 1 test in 0.001s\n\nFAILED (failures=1)\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("h3",{attrs:{id:"サイクル-2-green"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#サイクル-2-green"}},[s._v("#")]),s._v(" サイクル(2) Green")]),s._v(" "),t("p",[s._v("「とりあえず動くコード」を目指し、書いてみます。一例として、以下のような実装になりそうです。")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FizzBuzz")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    count "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("increment_counter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        FizzBuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" FizzBuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("テスト実行してみると、成功しました。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("root@233072c168ae:/test-hands-on# python -m unittest -v exercises.sample4.test_sample\ntest_increment_counter (exercises.sample4.test_sample.TestFizzBuzz.test_increment_counter) ... ok\n\n----------------------------------------------------------------------\nRan 1 test in 0.000s\n\nOK\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"サイクル-2-refactoring"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#サイクル-2-refactoring"}},[s._v("#")]),s._v(" サイクル(2) Refactoring")]),s._v(" "),t("p",[s._v("現在の "),t("code",[s._v("FizzBuzz")]),s._v(" はクラス変数というものを利用しています。\n設計にもよりますが、インスタンス間で値を共有させないようにするのが一般的でしょう。")]),s._v(" "),t("p",[s._v("python では "),t("code",[s._v("__init__")]),s._v(" メソッドを使うことで、インスタンス生成時に保持させる、インスタンス変数を定義することができます。これを使うと、基本的にはインスタンス間での値の共有はできなくなります。")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FizzBuzz")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("__init__")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("do")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("テスト実行してみると、成功したままなので OK です。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("root@233072c168ae:/test-hands-on# python -m unittest -v exercises.sample4.test_sample\ntest_increment_counter (exercises.sample4.test_sample.TestFizzBuzz.test_increment_counter) ... ok\n\n----------------------------------------------------------------------\nRan 1 test in 0.000s\n\nOK\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"サイクル-2-フィードバック"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#サイクル-2-フィードバック"}},[s._v("#")]),s._v(" サイクル(2) フィードバック")]),s._v(" "),t("p",[s._v("TODO リストを見直してみると、カウント数を返す実装はできていそうです。")]),s._v(" "),t("p",[s._v("また、リファクタリングをしたことで、"),t("code",[s._v("increment_counter()")]),s._v(" の外側にインスタンス変数としてカウント変数を保持させることができるようになりました。")]),s._v(" "),t("ul",[t("li",[s._v("[x] 実行回数を内部で保持し、カウントする")]),s._v(" "),t("li",[s._v("[x] 実行すると、カウント数を返す\n"),t("ul",[t("li",[s._v("[x] とりあえず 1 を返す (仮実装)")])])]),s._v(" "),t("li",[s._v('[ ] 実行回数が 3 の倍数なら、カウント数の代わりに "Fizz" を返す')]),s._v(" "),t("li",[s._v('[ ] 実行回数が 5 の倍数なら、カウント数の代わりに "Buzz" を返す')]),s._v(" "),t("li",[s._v('[ ] 実行回数が 3 と 5 両方の倍数なら、カウント数の代わりに "FizzBuzz" を返す')])]),s._v(" "),t("p",[s._v("では、次のサイクルにいきましょう。")]),s._v(" "),t("h3",{attrs:{id:"サイクル-3-red"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#サイクル-3-red"}},[s._v("#")]),s._v(" サイクル(3) Red")]),s._v(" "),t("p",[s._v("3 サイクル目です。次は、以下の仕様を実装してみましょう。")]),s._v(" "),t("blockquote",[t("ul",[t("li",[s._v('[ ] 実行回数が 3 の倍数なら、カウント数の代わりに "Fizz" を返す')])])]),s._v(" "),t("p",[s._v("失敗するテストを書きます。")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" unittest\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sample "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" FizzBuzz\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TestFizzBuzz")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unittest"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("TestCase"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test_increment_counter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        fizzbuzz "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" FizzBuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fizz"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fizz"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fizz"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fizz"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fizz"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br")])]),t("p",[s._v("予想通り、テストは失敗しますね。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('root@233072c168ae:/test-hands-on# python -m unittest -v exercises.sample4.test_sample\ntest_increment_counter (exercises.sample4.test_sample.TestFizzBuzz.test_increment_counter) ... FAIL\n\n======================================================================\nFAIL: test_increment_counter (exercises.sample4.test_sample.TestFizzBuzz.test_increment_counter)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/test-hands-on/exercises/sample4/test_sample.py", line 10, in test_increment_counter\n    self.assertEqual(fizzbuzz.increment_counter(), "Fizz")\nAssertionError: 3 != \'Fizz\'\n\n----------------------------------------------------------------------\nRan 1 test in 0.001s\n\nFAILED (failures=1)\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("h3",{attrs:{id:"サイクル-3-green"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#サイクル-3-green"}},[s._v("#")]),s._v(" サイクル(3) Green")]),s._v(" "),t("p",[s._v('さて、"Fizz" を返せるようにコードを修正しましょう。')]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FizzBuzz")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("__init__")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("increment_counter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fizz"')]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("テストも問題なしです。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("root@233072c168ae:/test-hands-on# python -m unittest -v exercises.sample4.test_sample\ntest_increment_counter (exercises.sample4.test_sample.TestFizzBuzz.test_increment_counter) ... ok\n\n----------------------------------------------------------------------\nRan 1 test in 0.000s\n\nOK\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"サイクル-3-refactoring"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#サイクル-3-refactoring"}},[s._v("#")]),s._v(" サイクル(3) Refactoring")]),s._v(" "),t("p",[s._v("このサイクルで書いたコードは、特にリファクタリング箇所もなさそうなのでスキップします。")]),s._v(" "),t("h3",{attrs:{id:"サイクル-3-フィードバック"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#サイクル-3-フィードバック"}},[s._v("#")]),s._v(" サイクル(3) フィードバック")]),s._v(" "),t("p",[s._v('サイクル(3) では、"Fizz" を返す実装ができました。')]),s._v(" "),t("ul",[t("li",[s._v("[x] 実行回数を内部で保持し、カウントする")]),s._v(" "),t("li",[s._v("[x] 実行すると、カウント数を返す\n"),t("ul",[t("li",[s._v("[x] とりあえず 1 を返す (仮実装)")])])]),s._v(" "),t("li",[s._v('[x] 実行回数が 3 の倍数なら、カウント数の代わりに "Fizz" を返す')]),s._v(" "),t("li",[s._v('[ ] 実行回数が 5 の倍数なら、カウント数の代わりに "Buzz" を返す')]),s._v(" "),t("li",[s._v('[ ] 実行回数が 3 と 5 両方の倍数なら、カウント数の代わりに "FizzBuzz" を返す')])]),s._v(" "),t("h3",{attrs:{id:"サイクル-4-red"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#サイクル-4-red"}},[s._v("#")]),s._v(" サイクル(4) Red")]),s._v(" "),t("p",[s._v("4 サイクル目です。次は、以下の仕様を実装してみましょう。")]),s._v(" "),t("blockquote",[t("ul",[t("li",[s._v('[ ] 実行回数が 5 の倍数なら、カウント数の代わりに "Buzz" を返す')])])]),s._v(" "),t("p",[t("code",[s._v("15")]),s._v(' の部分については、"FizzBuzz" としていることに注意してください。')]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" unittest\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sample "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" FizzBuzz\n\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TestFizzBuzz")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unittest"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("TestCase"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test_increment_counter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        fizzbuzz "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" FizzBuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fizz"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Buzz"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fizz"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fizz"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Buzz"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fizz"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("assertEqual"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("fizzbuzz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("increment_counter"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"FizzBuzz"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("p",[s._v("少しずつ、Red, Green, Refactoring のサイクルの感覚は掴めてきたでしょうか。\nこのテストは当然失敗し、次の Green ではそれを成功に導くわけですね。")]),s._v(" "),t("p",[s._v("分割統治法で 1 つずつ確実に課題をクリアしていく面白さを実感してもらえればなと思います。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('root@233072c168ae:/test-hands-on# python -m unittest -v exercises.sample4.test_sample\ntest_increment_counter (exercises.sample4.test_sample.TestFizzBuzz.test_increment_counter) ... FAIL\n\n======================================================================\nFAIL: test_increment_counter (exercises.sample4.test_sample.TestFizzBuzz.test_increment_counter)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File "/test-hands-on/exercises/sample4/test_sample.py", line 12, in test_increment_counter\n    self.assertEqual(fizzbuzz.increment_counter(), "Buzz")\nAssertionError: 5 != \'Buzz\'\n\n----------------------------------------------------------------------\nRan 1 test in 0.001s\n\nFAILED (failures=1)\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("h3",{attrs:{id:"サイクル-4-green"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#サイクル-4-green"}},[s._v("#")]),s._v(" サイクル(4) Green")]),s._v(" "),t("p",[s._v('"Buzz"および"FizzBuzz"を返せるようにしましょう。')]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FizzBuzz")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("__init__")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("increment_counter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("and")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"FizzBuzz"')]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fizz"')]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Buzz"')]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("テストも成功します。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("root@233072c168ae:/test-hands-on# python -m unittest -v exercises.sample4.test_sample\ntest_increment_counter (exercises.sample4.test_sample.TestFizzBuzz.test_increment_counter) ... ok\n\n----------------------------------------------------------------------\nRan 1 test in 0.000s\n\nOK\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"サイクル-4-refactoring"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#サイクル-4-refactoring"}},[s._v("#")]),s._v(" サイクル(4) Refactoring")]),s._v(" "),t("p",[s._v("最後のリファクタリングになります。")]),s._v(" "),t("p",[t("code",[s._v("if self.count % 3 == 0 and self.count % 5 == 0")]),s._v(" も誤りではないですが、もう少しきれいに書けそうです。")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FizzBuzz")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("__init__")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("increment_counter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"FizzBuzz"')]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fizz"')]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Buzz"')]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" self"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("root@233072c168ae:/test-hands-on# python -m unittest -v exercises.sample4.test_sample\ntest_increment_counter (exercises.sample4.test_sample.TestFizzBuzz.test_increment_counter) ... ok\n\n----------------------------------------------------------------------\nRan 1 test in 0.000s\n\nOK\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"サイクル-4-フィードバック"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#サイクル-4-フィードバック"}},[s._v("#")]),s._v(" サイクル(4) フィードバック")]),s._v(" "),t("p",[s._v('当初、"Buzz" を返す実装だけやるつもりでしたが、"FizzBuzz" を返す実装も同時にできましたね。')]),s._v(" "),t("ul",[t("li",[s._v("[x] 実行回数を内部で保持し、カウントする")]),s._v(" "),t("li",[s._v("[x] 実行すると、カウント数を返す\n"),t("ul",[t("li",[s._v("[x] とりあえず 1 を返す (仮実装)")])])]),s._v(" "),t("li",[s._v('[x] 実行回数が 3 の倍数なら、カウント数の代わりに "Fizz" を返す')]),s._v(" "),t("li",[s._v('[x] 実行回数が 5 の倍数なら、カウント数の代わりに "Buzz" を返す')]),s._v(" "),t("li",[s._v('[x] 実行回数が 3 と 5 両方の倍数なら、カウント数の代わりに "FizzBuzz" を返す')])]),s._v(" "),t("p",[s._v("これで全て完了です！")]),s._v(" "),t("h3",{attrs:{id:"問題にチャレンジしよう-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#問題にチャレンジしよう-3"}},[s._v("#")]),s._v(" 問題にチャレンジしよう")]),s._v(" "),t("p",[t("code",[s._v("exercises/exercise3/challenge.py")]),s._v("には、FastAPIで書かれた作りかけのAPIがあります。")]),s._v(" "),t("p",[s._v("上記のAPIは、コンテナから下記のコマンドで実行することができます。")]),s._v(" "),t("div",{staticClass:"language-terminal line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('root@233072c168ae:/test-hands-on# python3 -m uvicorn exercises.exercise3.challenge:app --reload --host "0.0.0.0"\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("API実行後は、ブラウザに下記のURLを入力すると、APIにアクセスできます。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("http://localhost:8000/\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("TDD を使って、上記のAPIを完成させてみましょう。\nAPI 仕様は、以下になります。")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("/")]),s._v(", "),t("code",[s._v("/add")]),s._v(", "),t("code",[s._v("/sub")]),s._v(", "),t("code",[s._v("/mul")]),s._v(", "),t("code",[s._v("/div")]),s._v(" の5つのエンドポイントがある")]),s._v(" "),t("li",[s._v("内部で int 型の値を保持し、現在設定されている値を、"),t("code",[s._v("/")]),s._v(" にアクセスすることで確認できる (また、値は 0 とする)")]),s._v(" "),t("li",[t("code",[s._v("/add")]),s._v(", "),t("code",[s._v("/sub")]),s._v(", "),t("code",[s._v("/mul")]),s._v(", "),t("code",[s._v("/div")]),s._v(" にパスパラメータを与えると、保持されている値に対し、四則演算を行う（後述）")]),s._v(" "),t("li",[s._v("計算は全て int 型で行う")])]),s._v(" "),t("p",[s._v("また、各パスの詳細な仕様な以下の通りです:")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("パス")]),s._v(" "),t("th",[s._v("詳細")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("/")]),s._v(" "),t("td",[t("code",[s._v('{"current_number": {数値}}')]),s._v("が返却されます。"),t("br"),s._v("{数値}には、サーバで保持されている値が入ります。")])]),s._v(" "),t("tr",[t("td",[s._v("/add/{data}")]),s._v(" "),t("td",[t("code",[s._v('{"current_number": {数値}}')]),s._v("が返却されます。"),t("br"),s._v("{data}に渡された値をサーバで保持している値に加算します。")])]),s._v(" "),t("tr",[t("td",[s._v("/sub/{data}")]),s._v(" "),t("td",[t("code",[s._v('{"current_number": {数値}}')]),s._v("が返却されます。"),t("br"),s._v("{data}に渡された値をサーバで保持している値から減算します。")])]),s._v(" "),t("tr",[t("td",[s._v("/mul/{data}")]),s._v(" "),t("td",[t("code",[s._v('{"current_number": {数値}}')]),s._v("が返却されます。"),t("br"),s._v("{data}に渡された値をサーバで保持している値に乗算します。")])]),s._v(" "),t("tr",[t("td",[s._v("/div/{data}")]),s._v(" "),t("td",[t("code",[s._v('{"current_number": {数値}}')]),s._v("が返却されます。"),t("br"),s._v("{data}に渡された値をサーバで保持している値から除算します。")])])])]),s._v(" "),t("p",[s._v("サーバでの値の保持・取得関数は、コード内に定義されています。\n以下に、使い方の例を記載します。")]),s._v(" "),t("div",{staticClass:"language-python line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-python"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# サーバ内に保持されている値を記録します。")]),s._v("\nset_current_number"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# サーバ内に保持されている値を取得します")]),s._v("\ngot_data "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" get_current_number"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("got_data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -> 1")]),s._v("\n\nset_current_number"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("456")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ngot_data "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" get_current_number"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("got_data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -> 579")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[t("code",[s._v("exercises/exercise3/test_challenge.py")]),s._v(" には、本APIが完成すると通るようになる、テスト"),t("code",[s._v("test_success()")]),s._v("が定義されています。")]),s._v(" "),t("p",[s._v("上記のテストがOKになるよう、各種APIをTDDを使って作成してみましょう。")]),s._v(" "),t("h1",{attrs:{id:"おわりに"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#おわりに"}},[s._v("#")]),s._v(" おわりに")]),s._v(" "),t("p",[s._v("一般的にソフトウェアテストというと、専門のテスト部隊があって「Excelにスクショをペタペタ貼るだけでしょ？」というようなイメージを持ち、敬遠される方も少なくはないと思います。")]),s._v(" "),t("p",[s._v("開発者がテストについて知識を持ち、単体テストで可能な限りの不具合をなくしておくと、後の工程で不具合が少なく済ますことができたり、メリットがあります。\nまた、後の工程で発生した不具合の内容を聞いた・見ただけで、どのモジュール同士で問題が起こっているのか目星がつくなど、効率的なトラブルシュートやソフトウェアの理解にも繋がります。")]),s._v(" "),t("p",[s._v("冒頭でも述べましたが、ソフトウェアにも品質というものがあり、この品質次第で会社の売上に影響が出たり、企業のセキュリティや人命に影響を及ぼしてしまう懸念もあります。")]),s._v(" "),t("p",[s._v("そのため、開発を行う際には是非テストにも注力し、ユーザーの満足できるソフトウェアを作れるよう、目指してみてください。")]),s._v(" "),t("p",[s._v("良いエンジニアライフを！👍")]),s._v(" "),t("credit-footer")],1)}),[],!1,null,null,null);t.default=e.exports}}]);