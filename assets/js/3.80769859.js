(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{341:function(s,e,a){s.exports=a.p+"assets/img/architecture.2ada1ece.png"},342:function(s,e,a){s.exports=a.p+"assets/img/prometheus_server.9f253d45.png"},343:function(s,e,a){s.exports=a.p+"assets/img/prometheus_targets.41eb72cc.png"},344:function(s,e,a){s.exports=a.p+"assets/img/alertmanaer.737fc26c.png"},345:function(s,e,a){s.exports=a.p+"assets/img/data_visualization.cac4c087.png"},346:function(s,e,a){s.exports=a.p+"assets/img/handson_default.58ac0d01.png"},347:function(s,e,a){s.exports=a.p+"assets/img/wordpress.973ad6ef.png"},348:function(s,e,a){s.exports=a.p+"assets/img/node_exporter.597b24ea.png"},349:function(s,e,a){s.exports=a.p+"assets/img/status_node.9104ac35.png"},350:function(s,e,a){s.exports=a.p+"assets/img/mem_metrics.71605ee4.png"},351:function(s,e,a){s.exports=a.p+"assets/img/mem_per.2244c3ad.png"},352:function(s,e,a){s.exports=a.p+"assets/img/grafana.c066dfb5.png"},353:function(s,e,a){s.exports=a.p+"assets/img/datasource.a09c281b.png"},354:function(s,e,a){s.exports=a.p+"assets/img/access.c4bac46f.svg"},355:function(s,e,a){s.exports=a.p+"assets/img/load_ave.ccbd4eab.png"},356:function(s,e,a){s.exports=a.p+"assets/img/node-exporter_temp.8f8a1691.png"},357:function(s,e,a){s.exports=a.p+"assets/img/blackbox_exporter.3e6f314f.png"},358:function(s,e,a){s.exports=a.p+"assets/img/probe_success_table.8a9566a2.png"},359:function(s,e,a){s.exports=a.p+"assets/img/probe_success.d5274d4a.png"},360:function(s,e,a){s.exports=a.p+"assets/img/probe_status.c8ba0df9.png"},361:function(s,e,a){s.exports=a.p+"assets/img/grafana_status_graph.975d3eb0.png"},362:function(s,e,a){s.exports=a.p+"assets/img/grafana_status.eba5525b.png"},363:function(s,e,a){s.exports=a.p+"assets/img/thresholds.b075b468.png"},364:function(s,e,a){s.exports=a.p+"assets/img/http_status.aa5f4fcb.png"},365:function(s,e,a){s.exports=a.p+"assets/img/http_status_error.d9089dfd.png"},366:function(s,e,a){s.exports=a.p+"assets/img/grafana_all.d7245a85.png"},544:function(s,e,a){"use strict";a.r(e);var t=a(16),r=Object(t.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("header-table"),s._v(" "),e("h1",{attrs:{id:"prometheusでアプリケーションを監視してみよう"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#prometheusでアプリケーションを監視してみよう"}},[s._v("#")]),s._v(" Prometheusでアプリケーションを監視してみよう")]),s._v(" "),e("h2",{attrs:{id:"_0-まえがき"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0-まえがき"}},[s._v("#")]),s._v(" 0. まえがき")]),s._v(" "),e("h3",{attrs:{id:"_0-1-想定している受講者"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0-1-想定している受講者"}},[s._v("#")]),s._v(" 0-1. 想定している受講者")]),s._v(" "),e("p",[s._v("本講義では以下の受講者を対象としています。")]),s._v(" "),e("ul",[e("li",[s._v("監視って言われても何を監視すればいいのか分からない")]),s._v(" "),e("li",[s._v("監視が必要なのはわかるけど、なんで必要なのか分からない")]),s._v(" "),e("li",[s._v("Prometheusを触ったことがないので触ってみたい")])]),s._v(" "),e("h3",{attrs:{id:"_0-2-前提知識"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0-2-前提知識"}},[s._v("#")]),s._v(" 0-2. 前提知識")]),s._v(" "),e("p",[s._v("基本的に前提知識は無しでも問題ないですが、以下の点を押さえておくと講義がスムーズに聞けます。")]),s._v(" "),e("ul",[e("li",[s._v("Linuxの基礎的なコマンド")]),s._v(" "),e("li",[s._v("dockerの基礎")])]),s._v(" "),e("h3",{attrs:{id:"_0-3-事前準備"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0-3-事前準備"}},[s._v("#")]),s._v(" 0-3. 事前準備")]),s._v(" "),e("ul",[e("li",[s._v("Dockerのインストール\n"),e("ul",[e("li",[e("code",[s._v("docker image ls")]),s._v('で"hello-world"が存在しない状態で、'),e("code",[s._v("docker run hello-world")]),s._v("が実行できていればOK")])])]),s._v(" "),e("li",[s._v("Docker Composeのインストール\n"),e("ul",[e("li",[e("code",[s._v("docker-compose --version")]),s._v("でバージョン情報が出ていればOK")]),s._v(" "),e("li",[s._v("バージョンに指定はありませんが新しい方がいいです")])])])]),s._v(" "),e("h3",{attrs:{id:"_0-4-注意事項"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0-4-注意事項"}},[s._v("#")]),s._v(" 0-4. 注意事項")]),s._v(" "),e("p",[s._v("本講義は「監視概論」と「Prometheusを触ってみよう」の二部構成になっています。Promethusのハンズオンのみを受講したい方は、時間を指定しますのでその時間になったら合流してください。「監視概論」では監視そのものの基礎を座学中心に学んでいきます。「Promethusを触ってみよう」ではPrometheusを使った監視をハンズオンを中心に学んでいきます。")]),s._v(" "),e("h2",{attrs:{id:"_1-監視概論"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-監視概論"}},[s._v("#")]),s._v(" 1. 監視概論")]),s._v(" "),e("h3",{attrs:{id:"_1-1-監視とは"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-監視とは"}},[s._v("#")]),s._v(" 1-1. 監視とは")]),s._v(" "),e("p",[s._v("システムに置ける「監視」は主に"),e("strong",[s._v("monitoring")]),s._v("としての意味で使われます。"),e("strong",[s._v("monitoring")]),s._v("の直訳的な意味は「(時間経過として)見張り、状態変化を検知すること」で、システムにおけるmonitoringとは「(主に)時間経過と共に変化したものを検知する」ことを指します。身近な例でいうと、自分の担当するサーバが意図せずダウンしたとき、何かしらの方法で皆さんの下に通知が来ると思います。この例でいうと「サーバダウンを検知→管理者へ通知」の流れがmonitoringになります。")]),s._v(" "),e("p",[s._v("最近ではmonitoringをする上で"),e("strong",[s._v("observability")]),s._v("というキーワードが重要視されるようになりました。"),e("strong",[s._v("observability")]),s._v("の直訳的な意味は「可観測性」です。システムにおけるobservabilityとは「システム全体の中のコンポーネント同士がどのように動いているかを観測できる能力」ことです。システムにobservabilityがない場合、十分にシステムの状態を把握することができず、monitoringが機能しなくなります。")]),s._v(" "),e("blockquote",[e("p",[s._v("【解説】")]),s._v(" "),e("p",[s._v("従来型のサーバが縦並びになったような、いわゆるモノリシック・アーキテクチャではコンポーネントの単位が大きいため、コンポーネント同士のobservabilityを意識せずとも、各コンポーネントをmonitoringするだけで監視を行うことができました。"),e("br"),s._v("\nしかし、近年はクラウド化/サーバレス化に伴いマイクロサービス・アーキテクチャが進んでいます。マイクロサービス・アーキテクチャはコンポーネントの単位を小さくし、かつシステム全体が疎結合になるように構成することで、耐障害性や高いスケーリング性能が得られるという特徴を持っています。コンポーネントの単位が小さいということは、そのコンポーネント同士の状態の組み合わせが複雑になり、把握が難しくなるということです。従ってobservabilityを重要視しないとコンポーネントのmonitoringが機能しなくなります。")])]),s._v(" "),e("p",[s._v("近年、IT技術の急速な発展の中で「仮想化」「クラウド化」「サーバレス」「コンテナ化」といったワードがトレンドに上がっていますが、そのどの技術にも「監視」というのは必ずついて周ります。むしろ監視で得られた情報を元に、自動でスケールするようなシステムが増え、今までの"),e("strong",[s._v("monitoring")]),s._v("に加え、"),e("strong",[s._v("observability")]),s._v("も含めた「監視」の重要性が高まってきています。本講義ではこの「監視」について、監視における必要な考え方から具体的な構築までをテーマに取り扱っていきたいと思います。")]),s._v(" "),e("p",[s._v("そもそも、監視の目的は「サービスを通してユーザに価値を提供し続ける」ことにあるとされています。もし監視を行わなかった場合、高頻度でサービス停止を招き"),e("strong",[s._v("ユーザに価値を提供しつづける")]),s._v("ことができなくなります。例えば仮にシステムが落ちていたとしても、監視をしていないがために、"),e("strong",[s._v("ユーザから問い合わせがあって初めて気が付く")]),s._v("なんてこともあります。また、一度は障害直せても対策を練るのに十分な情報がなく、"),e("strong",[s._v("同じ障害を頻繁")]),s._v("に引き起こします。どれだけ素晴らしく画期的なサービスでも、システムが停止している時間が長ければ長いほど顧客を手離し、利益を損なうことになります。")]),s._v(" "),e("p",[s._v("監視を行っている身近な例にソーシャルゲームがあります。サーバ負荷を測定しておくことで、毎年どの時期に負荷がかから傾向を掴み、みんなが問題なくガチャを回せるように前もってサーバをスケーリングさせています。もしサーバ負荷に耐え切れず、アクセス障害でも起こしたら、せっかくユーザが諭吉を片手にゲームを開いたのにガチャを回せず、正気に戻って課金をしなくなってしまいます。")]),s._v(" "),e("p",[s._v("監視の重要性がわかっていただけましたでしょうか？次の節では先ほど挙げた監視の目的を踏まえ、目標達成に必要な4つの要素について触れていきたいと思います。")]),s._v(" "),e("h3",{attrs:{id:"_1-2-監視の役割"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-監視の役割"}},[s._v("#")]),s._v(" 1-2. 監視の役割")]),s._v(" "),e("p",[s._v("監視目的(サービスを通してユーザに価値を提供し続けること)について抽象的に紹介しましたが、ここでは監視によって実現されることについて、代表的な4つの性質を紹介します。(「わかばちゃんと学ぶサーバ監視」より抜粋)")]),s._v(" "),e("ol",[e("li",[s._v("システムのリソース状況を誰でも見れるようになる(可視性)")]),s._v(" "),e("li",[s._v("問題発生時にアラートを発され、即座に対応できるようになる(通知性)")]),s._v(" "),e("li",[s._v("問題発生時の原因特定をしやすくなる(特定性)")]),s._v(" "),e("li",[s._v("統計データを取りシステム傾向を掴み対策をとりやすくなる(分析性)")])]),s._v(" "),e("p",[s._v("場合によっては実現できる性質が大きく変わってくることがありますが、今回は理解がしやすい4つ性質を挙げました。以下、この4つの要素について簡単に説明します。")]),s._v(" "),e("ol",[e("li",[s._v("可視性")])]),s._v(" "),e("p",[s._v("システムのアクセス率やサーバ負荷などといったリソース状況を誰でも見れるようにすることで、システム全体状況を把握できる人が増え、監視属人化を防ぐことができます。注意して欲しいのは「複雑な手順を踏まないとリソースが見れない/把握できない」ような監視システムは"),e("strong",[s._v("可視性が悪い")]),s._v("と言えます。可視性向上にはいくつかの方法がありますが、基本的にGUIを使ってグラフィカルに見れるWebUIなんかがあると可視性が格段に向上します。")]),s._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[s._v("通知性")])]),s._v(" "),e("p",[s._v("アラートを発し、即座に対応できるようにすることでサービス提供機会の損失を低くすることができます。ただし、何でもかんでもとにかく電話をかけるだけがアラートではありません。障害の度合により適切な通知手段(電話、SMS、チャット)を取らないと、誰も通知を信用しない狼少年状態になることがあります。CPU利用率が50%超えたからと言って夜中に叩き起こされたらたまったものではありません。いわゆる、燃え尽き症候群(burn-out)と言われるもので、結局人が働いているので人の性質を無視して業務は回せないのです。")]),s._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[s._v("特定性")])]),s._v(" "),e("p",[s._v("常日頃からログやメトリクスを収集し、一定期間保存することで、万が一障害が起きても直前の挙動を把握することができ、障害の原因特定を迅速に進めることができます。また、障害となる原因を特定することで再発防止策も打ち立てやすく、同じような障害を起こしづらいシステムに昇華させることができます。")]),s._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[s._v("分析性")])]),s._v(" "),e("p",[s._v("障害の事後対応だけが監視の役割ではありません。過去のデータを基にシステム全体の傾向を分析し、対策を打ち立てることで"),e("strong",[s._v("障害を未然に防ぐ")]),s._v("ことができます。さらにもっと広い意味で「そのビジネスがうまくいっているのか」といった分析も監視を通して行うことで、さらなる収益増加につなげることもできます。")]),s._v(" "),e("p",[s._v("監視により主にこれら4つの性質を実現することができますが、この性質の中の何を最重視するかという問いに対しては、そのプロジェクトごとに異なるため正解がなく、プロジェクトメンバーの中で念入りに話し合う必要があります。また、それに沿う形で監視システムを構築する必要があります。")]),s._v(" "),e("h3",{attrs:{id:"_1-3-簡単な監視ハンズオン"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-簡単な監視ハンズオン"}},[s._v("#")]),s._v(" 1-3. 簡単な監視ハンズオン")]),s._v(" "),e("p",[s._v("座学は以上になります。ここからはサーバを実際に立て、Linux上でサーバを監視してみましょう。ハンズオンの流れは以下になります。")]),s._v(" "),e("ol",[e("li",[s._v("dockerを使って簡単なWordPressサーバをローカルに建てる")]),s._v(" "),e("li",[s._v("vmstatでパフォーマンス監視を行う")]),s._v(" "),e("li",[s._v("curlを使って外部からサービス監視を行う")])]),s._v(" "),e("h4",{attrs:{id:"step1-dockerを使って簡単なwordpressサーバをローカルに建てる"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#step1-dockerを使って簡単なwordpressサーバをローカルに建てる"}},[s._v("#")]),s._v(" STEP1:dockerを使って簡単なWordPressサーバをローカルに建てる")]),s._v(" "),e("p",[s._v("まず、公式のWordPressサーバ(コンテナ)をdocker hubからpullします。pull出来ているか心配な場合は適宜"),e("code",[s._v("docker image ls")]),s._v("で存在を確認してください。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# docker pull wordpress:php8.0-apache\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("次にコンテナを立ち上げます。ポートはlocalhostの8080をコンテナの80にフォワードさせていますが、すでに他のコンテナで使用中の場合は適宜空いているポートを割り当ててください。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# docker run -d --name monitoring_bootcamp -p 8080:80 wordpress:php8.0-apache \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("最後に"),e("code",[s._v("docker ps")]),s._v("でwordpressが立ち上がって、Webページにアクセス出来ていればSTEP1は完了です。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('# docker ps\nCONTAINER ID   IMAGE       COMMAND                  CREATED          STATUS          PORTS                  NAMES\n3d7494717550   wordpress   "docker-entrypoint.s…"   47 minutes ago   Up 11 minutes   0.0.0.0:8080->80/tcp   monitoring_bootcamp\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("適当なブラウザでdockerを立ち上げたサーバ宛にアクセスできればOKです。")]),s._v(" "),e("p",[e("img",{attrs:{src:"images/wordpress.png",alt:"wordpress"}})]),s._v(" "),e("h4",{attrs:{id:"step2-vmstatでパフォーマンス監視を行う"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#step2-vmstatでパフォーマンス監視を行う"}},[s._v("#")]),s._v(" STEP2:vmstatでパフォーマンス監視を行う")]),s._v(" "),e("p",[s._v("STEP2ではサーバパフォーマンスを目視で確認します。(これをパフォーマンス監視といいます)立ち上げたコンテナの中に入り"),e("code",[s._v("vmstat")]),s._v("コマンドを入力します。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# docker exec -it monitoring_bootcamp /bin/bash\ncontainer~# vmstat -tw 1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("code",[s._v("-t")]),s._v("はタイムスタンプ表示、"),e("code",[s._v("-w")]),s._v("はワイド表示です。引数の数字は1秒おきに実行するという意味です。vmstatコマンドを叩くとサーバパフォーマンスのメトリクス情報が出てきます。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("procs -----------------------memory---------------------- ---swap-- -----io---- -system-- --------cpu-------- -----timestamp-----\n r  b         swpd         free         buff        cache   si   so    bi    bo   in   cs  us  sy  id  wa  st                 UTC\n 3  0            0      9249760       122220      3209688    0    0     0     0   41  237   0   0 100   0   0 2021-05-28 10:10:46\n 0  0            0      9246812       122220      3209688    0    0     0     0   84  371   0   0 100   0   0 2021-05-28 10:10:47\n 0  0            0      9246004       122220      3209688    0    0     0     0   34  227   0   0 100   0   0 2021-05-28 10:10:48\n 0  0            0      9246116       122220      3209696    0    0     0     0   34  112   0   0 100   0   0 2021-05-28 10:10:49\n 0  0            0      9246116       122220      3209696    0    0     0     0   33  241   0   0 100   0   0 2021-05-28 10:10:50\n 0  0            0      9246116       122220      3209696    0    0     0     0   32  112   0   0 100   0   0 2021-05-28 10:10:51\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("code",[s._v("man")]),s._v("コマンドでも確認できますが、各数字の意味は以下になります。")]),s._v(" "),e("ul",[e("li",[s._v("proc\n"),e("ul",[e("li",[s._v("r：ランタイム待ちのプロセス数")]),s._v(" "),e("li",[s._v("b：割り込み不可能なスリープ状態にあるプロセス数")])])]),s._v(" "),e("li",[s._v("memory\n"),e("ul",[e("li",[s._v("swpd：仮想メモリの量")]),s._v(" "),e("li",[s._v("free：空きメモリの量")]),s._v(" "),e("li",[s._v("buff：バッファに用いられるメモリの量")]),s._v(" "),e("li",[s._v("cache：キャッシュに用いられるメモリの量")])])]),s._v(" "),e("li",[s._v("swap\n"),e("ul",[e("li",[s._v("si：ディスクからスワップインされているメモリの量(/s)")]),s._v(" "),e("li",[s._v("so：ディスクからスワップアウトされているメモリの量(/s)")])])]),s._v(" "),e("li",[s._v("io\n"),e("ul",[e("li",[s._v("bi：ブロックデバイスから受け取ったブロック(blocks/s)")]),s._v(" "),e("li",[s._v("bo：ブロックデバイスに送られたブロック(blocks/s)")])])]),s._v(" "),e("li",[s._v("system\n"),e("ul",[e("li",[s._v("in：1秒あたりの割り込み回数。クロック割込みも含む")]),s._v(" "),e("li",[s._v("cs：1秒あたりのコンテキストスイッチの回数")])])]),s._v(" "),e("li",[s._v("cpu\n"),e("ul",[e("li",[s._v("us：カーネルコード以外の実行に使用した時間")]),s._v(" "),e("li",[s._v("sy：カーネルコードの実行に使用した時間")]),s._v(" "),e("li",[s._v("id：アイドル時間")]),s._v(" "),e("li",[s._v("wa：IO待ち時間")])])]),s._v(" "),e("li",[s._v("timestamp：タイムスタンプ")])]),s._v(" "),e("p",[s._v("次に、実際に負荷をかけて変化の様子を見ていきます。今回はHTTPリクエストを大量に投げるスクリプトを実行して、CPUに負荷をかけてみましょう。端末をもう一つ開き、そこからHTTPリクエストを自身に1万個投げます。(端末が一つしか開けない方は"),e("code",[s._v("screen")]),s._v("や"),e("code",[s._v("tmux")]),s._v("を駆使しください)")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('# docker exec -it monitoring_bootcamp /bin/bash\ncontainer~# seq 1 10000 | xargs -I % -P 20 curl "http://localhost" -o /dev/null -s\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("リクエストを投げると"),e("code",[s._v("vmstat")]),s._v("の画面ではどこの負荷がかかっているかが確認できます。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("負荷かける前\nprocs -----------------------memory---------------------- ---swap-- -----io---- -system-- --------cpu-------- -----timestamp-----\n r  b         swpd         free         buff        cache   si   so    bi    bo   in   cs  us  sy  id  wa  st                 JST\n 0  0            0      9171992       127648      3322200    0    0     0     0   48  218   0   0 100   0   0 2021-05-28 13:30:57\n 0  0            0      9171992       127648      3322200    0    0     0     0   30  100   0   0 100   0   0 2021-05-28 13:30:58\n 0  0            0      9171992       127648      3322200    0    0     0     0   34  204   0   0 100   0   0 2021-05-28 13:30:59\n 0  0            0      9171992       127648      3322200    0    0     0     4   41  128   0   0 100   0   0 2021-05-28 13:31:00\n 0  0            0      9171992       127648      3322200    0    0     0     0   34  220   0   0 100   0   0 2021-05-28 13:31:01\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("負荷かけた後\nprocs -----------------------memory---------------------- ---swap-- -----io---- -system-- --------cpu-------- -----timestamp-----\nr  b         swpd         free         buff        cache   si   so    bi    bo   in   cs  us  sy  id  wa  st                 JST\n 9  0            0      9156508       127648      3322200    0    0     0     0 5351 29472  47  34  19   0   0 2021-05-28 13:31:04\n 9  0            0      9157360       127656      3322392    0    0     0    12 5559 31376  48  36  15   0   0 2021-05-28 13:31:05\n 2  0            0      9160176       127656      3322508    0    0     0     0 6056 31527  46  37  17   0   0 2021-05-28 13:31:06\n 9  0            0      9154440       127656      3322628    0    0     0     0 5915 31500  46  38  15   0   0 2021-05-28 13:31:07\n 7  0            0      9151888       127656      3322772    0    0     0     0 5906 31615  49  36  15   0   0 2021-05-28 13:31:08\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("ここで"),e("code",[s._v("procs")]),s._v("の"),e("code",[s._v("r")]),s._v("、"),e("code",[s._v("system")]),s._v("の"),e("code",[s._v("in")]),s._v("、"),e("code",[s._v("cs")]),s._v("、"),e("code",[s._v("cpu")]),s._v("の"),e("code",[s._v("us")]),s._v("と"),e("code",[s._v("sy")]),s._v("に注目してください。これらの挙動から以下のことが考察できます。")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("procs")]),s._v("の"),e("code",[s._v("r")]),s._v("が異様に高いためプロセスの処理が追いついてない\n"),e("ul",[e("li",[s._v("CPUかメモリが原因？"),e("code",[s._v("b")]),s._v("に負荷がないからディスクは問題なさそう……。")])])]),s._v(" "),e("li",[e("code",[s._v("swap")]),s._v("の"),e("code",[s._v("si")]),s._v("か"),e("code",[s._v("so")]),s._v("が0だからメモリの量は間に合ってる\n"),e("ul",[e("li",[s._v("メモリ原因説はなさそう……。")])])]),s._v(" "),e("li",[e("code",[s._v("system")]),s._v("が異様に高く、オーバヘッドが多く生じてる\n"),e("ul",[e("li",[s._v("CPUに負荷がかかりすぎている。")])])]),s._v(" "),e("li",[e("code",[s._v("cpu")]),s._v("の"),e("code",[s._v("us")]),s._v("と"),e("code",[s._v("sy")]),s._v("が高く、アイドル時間も短くなってる\n"),e("ul",[e("li",[s._v("やはりCPUに負荷がかかっているのが原因か！")])])])]),s._v(" "),e("p",[s._v("といった感じで、もしこのシステムが障害起こした時は「プロセス過多によるCPUへの高負荷が原因である！」と判断が出来るわけです。余力のある方は、"),e("code",[s._v("yes > /tmp/yes.txt")]),s._v("を実行し、ディスクIOの負荷も確認してみてください。")]),s._v(" "),e("h3",{attrs:{id:"step3-curlを使って外部からサービスの動作を監視する"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#step3-curlを使って外部からサービスの動作を監視する"}},[s._v("#")]),s._v(" STEP3:curlを使って外部からサービスの動作を監視する")]),s._v(" "),e("p",[s._v("最後のSTEPではサービスがちゃんと動いているかを確認します。「サービスがちゃんと動いている」とは何かについては、サービスごとに定義する必要がありますが、ここでは「WebページにアクセスしてHTTPステータスコード200が返ってくること」とします。まずは、端末をもう一つ開き、そこから"),e("code",[s._v("curl")]),s._v("コマンドを使ってHTTPステータスコードを取得します。(端末が一つしか開けない方は"),e("code",[s._v("screen")]),s._v("や"),e("code",[s._v("tmux")]),s._v("を駆使しください)")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# while true; do date && curl -LI localhost:8080 -o /dev/null -w '%{http_code}\\n' -s; sleep 1; done\nもしくは\n# watch -n 1 -d curl -LI localhost:8080 -o /dev/null -w '%{http_code}' -s\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("端末に「200」と表示されればOKです。このように、HTTPステータスコードを監視することを「HTTP(S)監視」といいます。この状態でWebサーバ内の情報を書き換えて、エラーを吐かせてみます。別の端末を開き、コンテナ内部の情報を書き換えます。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# docker exec -it monitoring_bootcamp mv /var/www/html/wp-admin /var/www/html/wp-admins\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("すると外部からHTTP監視していた端末に「500」と表示されます。つまり「サービスがちゃんと動いていない」と機械的に判断することができます。")]),s._v(" "),e("p",[s._v("かなり地味な監視ではありますが、HTTPステータスコードといったデータを記録することでいつ、どこで、どれぐらいの頻度で、なんのエラーを吐いているかを"),e("strong",[s._v("ユーザに一番近いところ")]),s._v("で監視することができるため、サービス全体の方針決めに大きなキッカケを作ることができます。そのため地味とは言え軽視はできません。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# docker exec -it monitoring_bootcamp mv /var/www/html/wp-admins /var/www/html/wp-admin\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("忘れずに戻しておきましょう。")]),s._v(" "),e("p",[s._v("今回目視で監視を行いましたが、目視での監視を人が常に張り付いて確認するのはイケていないですし、必要なデータの収集も行うとなると大変な作業になります。次章ではこの監視を「Prometheus」というナウでヤングな監視ツールを使って楽に監視する方法を紹介します。")]),s._v(" "),e("h3",{attrs:{id:"_1-4-監視のアンチパターン-読みたい人は読んでください"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-監視のアンチパターン-読みたい人は読んでください"}},[s._v("#")]),s._v(" 1-4. 監視のアンチパターン(読みたい人は読んでください)")]),s._v(" "),e("p",[s._v("監視はそれを実装するシステム時々で正解が異なります。すべてのパターンを紹介するのは現実的ではないため、監視における代表的なアンチパターンを4つほど紹介します。(「入門 監視」より抜粋)")]),s._v(" "),e("ol",[e("li",[s._v("ツール依存")])]),s._v(" "),e("p",[s._v('一番陥りがちなアンチパターンです。監視デザインが素晴らしく、サービスも成功している会社/チームが使っているツールやその手順を形だけ真似て導入しても、いずれどこかでボロが出て監視に失敗します。目的化を避け、サービスに必要な監視事項を洗い出した上でツールを選定してください。有名な例で「とある島の集落に先進国が水や食料を飛行機を使って運んでいたら、現地の住民が"滑走路を作れば鉄の塊が物資を運んでくる！"と勘違いし、滑走路に似たものを作ったが、そこには一向に飛行機はやってこなかった。」という話があります。形だけ真似ても失敗します。')]),s._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[s._v("監視を役割にする")])]),s._v(" "),e("p",[s._v("監視のエキスパートを一人持ってきて、その人に監視システムの責任を負わせるのはアンチパターンです。一見、「DBのエキスパート」や「アプリのエキスパート」のように役割として「監視のエキスパート」を誰か一人に任せることは効率がいいように見えますが、システム構成を理解していない人にサービスの監視をさせても「何が異常状態なのかわからない」「今すぐ対応すべきことと後で対応すべきことの判断がつかない」といった状態になり、必要なアラートを無視したり、アラート自体が狼少年状態になることもあります。監視に関するスキルをメンバー全員が持ち、属人化をしないようにしてください。")]),s._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[s._v("監視ツールが複雑すぎる")])]),s._v(" "),e("p",[s._v("色んな機能が盛りだくさんでパッケージングされている監視ツールをそのまま使うのはアンチパターンです。大抵の場合、担当者以外が操作できなくなります。誰でも使えるツールというのは難しい課題ですが、コンポーネント化されていて必要な機能を組み合わせて利用できる監視ツールが理想と言えます。")]),s._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[s._v("手動監視")])]),s._v(" "),e("p",[s._v("手動で手順書を手順通り実行し、確認して問題があればアラートを発するような監視は自動化できないか見直す方がいいです。例えば先ほどのハンズオンで行った内容をそのまま監視システムとして組み込み、「人力で確認して200OKじゃないときにアラートを投げる」というのを手動で行っているのなら、それはスクリプトに出来るのでスクリプトにし、監視システム自体がそれを自動実行できるようにするべきです。")]),s._v(" "),e("h3",{attrs:{id:"_1-5-まとめ"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-まとめ"}},[s._v("#")]),s._v(" 1-5. まとめ")]),s._v(" "),e("p",[s._v("ここまで監視について基礎的なことを記載しました。監視の目的は「サービスを通してユーザに価値を提供すること」にあります。また、監視により「可視性」「即時性」「特定性」「分析性」の4つの性質が実現されますが、"),e("strong",[s._v("ユーザに最高の価値を提供しつづける")]),s._v("にはどの性質に力を入れるべきかはチームで話し合う必要があります。それは時として「1からオリジナルの監視ツールを作った方がいい」という場合をもあることを忘れないようにしてください。")]),s._v(" "),e("p",[s._v("ここまで監視の考え方については記載しましたが、具体的な分析方法や必要な監視対象については記載していません。例えば「得た監視データをどう分析するのか？」や「セキュリティ監視やネットワーク監視は何を意識すればいいのか？」などです。これらは監視対象のシステムによって異なることがあるため、いまこの場所で解説しないことにします。講義の最後に参考文献を挙げるので、いくつかの情報を横断的に読み込み、自分の中で腑に落ちる形で解釈することをオススメします。")]),s._v(" "),e("h2",{attrs:{id:"_2-prometheusを触ってみよう"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-prometheusを触ってみよう"}},[s._v("#")]),s._v(" 2. Prometheusを触ってみよう")]),s._v(" "),e("h3",{attrs:{id:"_2-1-prometheusとは"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-prometheusとは"}},[s._v("#")]),s._v(" 2-1. Prometheusとは")]),s._v(" "),e("p",[s._v("Prometheusについて説明する前に、他の監視ツールについて簡単に簡単に紹介します。")]),s._v(" "),e("p",[s._v("世の中にはPrometheus、Zabbix、Datadogというように多くの監視ツールがありますが、それらは「Push型」と「Pull型」の2つに大きく分類することが出来ます。")]),s._v(" "),e("ul",[e("li",[s._v("Push型監視ツール\n"),e("ul",[e("li",[s._v("特徴\n"),e("ul",[e("li",[s._v("監視対象のサーバにエージェントをインストールして、エージェントから監視サーバへ監視情報を送る")])])]),s._v(" "),e("li",[s._v("メリット\n"),e("ul",[e("li",[s._v("監視対象サーバが増えても対象にエージェントなどを入れるだけで監視対象を増やすことが出来る")])])]),s._v(" "),e("li",[s._v("デメリット\n"),e("ul",[e("li",[s._v("監視サーバを切り替えるときにすべてのエージェントに対して、切替先の監視サーバ情報を新たに追加する必要がある")])])]),s._v(" "),e("li",[s._v("例\n"),e("ul",[e("li",[s._v("Datadog、Machinist")])])])])]),s._v(" "),e("li",[s._v("Pull型監視ツール\n"),e("ul",[e("li",[s._v("特徴\n"),e("ul",[e("li",[s._v("監視サーバが監視対象へ監視情報を取りにいく")])])]),s._v(" "),e("li",[s._v("メリット\n"),e("ul",[e("li",[s._v("開発中に自身のラップトップから監視を実行できる。また、Webブラウザで監視対象を開き、手動でその状態を確認できる。")])])]),s._v(" "),e("li",[s._v("デメリット\n"),e("ul",[e("li",[s._v("ノードが増えた時にエージェントなどを入れたうえで、さらに監視サーバの設定ファイルを変更する必要がある")])])]),s._v(" "),e("li",[s._v("例\n"),e("ul",[e("li",[s._v("Prometheus、Zabbix、Nagios")])])])])])]),s._v(" "),e("p",[s._v("どちらもメリットデメリットがあり優越がつけがたいため、要件にあわせて選ぶ必要があります。")]),s._v(" "),e("p",[s._v("ここからはPrometheusの説明になります。Prometheusはsoundcloud社が作ったPull型の監視ツールです。CNCF管理下でのツールになっていて、ランクはGraduatedで成熟したCNCFプロジェクトとなります。先ほどPull型の監視ツールのデメリットで「サーバを追加する度に監視サーバの設定を変更する必要がある」という項目がありましたが、Prometheusではサービスディスカバリという機能でこの欠点を補っています。")]),s._v(" "),e("p",[s._v("近年、クラウド化が進みAWSやGCP、Azureなどでユーザが自由にサーバを建てたり壊したりすることができるようになりました。まや、Kubernetesのようにコンテナの破壊と創造を頻繁に繰り返すようなツールが普及したことで、監視対象が頻繁に切り替わることが多くあります。そのような中で、それらのサーバをサービスディスカバリで楽に監視することが出来るのが「Prometheus」であり、そういった背景で現在話題に上がっています。また、GO言語でかかれていて実行が早く、exporterやalertmanagerといった監視するためのパッケージが揃っていたことも人気の理由となっています。")]),s._v(" "),e("p",[s._v("サービスディスカバリとは一言でいうと「ある特徴の属性を持つサーバを自動で調べてくれる」機能で、たとえばAWSでは起動しているEC2を一覧化するAPIがあり、サービスディスカバリはそれを使ってホスト情報を取得し、自動で監視対象に追加することができます。")]),s._v(" "),e("h3",{attrs:{id:"_2-2-prometheusで出来ること-出来ないこと"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-prometheusで出来ること-出来ないこと"}},[s._v("#")]),s._v(" 2-2. Prometheusで出来ること/出来ないこと")]),s._v(" "),e("ul",[e("li",[s._v("出来ること\n"),e("ul",[e("li",[s._v("監視対象のサーバから監視情報の取得")]),s._v(" "),e("li",[s._v("取得した監視情報の保管")]),s._v(" "),e("li",[s._v("監視情報を元にしたアラート(Alertmanagerが必要)")])])]),s._v(" "),e("li",[s._v("出来ないこと\n"),e("ul",[e("li",[s._v("冗長構成(内部のDB構造が冗長性を考慮していない設計なので、外部DBに保存するといった手段を取る必要が出てくる。またはPrometheusサーバを2つ建てるという形で実装可能)")]),s._v(" "),e("li",[s._v("ユーザ/ダッシュボードの管理(これを解決するためにGrafanaが使われることが多い)")]),s._v(" "),e("li",[s._v("データの長期保存(長期保存を前提として設計されていないので、別途保存用のサーバが必要)")]),s._v(" "),e("li",[s._v("データを100%信頼すること(メトリクスの転送に失敗しても、それを再送する仕組みが無いので、多少精度の粗さを許容する必要がある)")])])]),s._v(" "),e("li",[s._v("出来なさそうで出来ること\n"),e("ul",[e("li",[s._v("Push型の監視(「Pushgateway」というサーバを立ててそこから監視情報をpullする形で実装できる)")]),s._v(" "),e("li",[s._v("ログ情報を収集してそこからメトリクスを取得(fluentdやtmailの実装が必要)")])])])]),s._v(" "),e("h3",{attrs:{id:"_2-3-prometheusの実装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-prometheusの実装"}},[s._v("#")]),s._v(" 2-3. Prometheusの実装")]),s._v(" "),e("p",[s._v("Prometheusのアーキテクチャは以下の図を見ると分かりやすいです。\n"),e("img",{attrs:{src:a(341),alt:"architecture"}}),s._v("\n登場人物を順に説明します。")]),s._v(" "),e("ul",[e("li",[s._v("Prometheus Server\n"),e("ul",[e("li",[s._v("Retrieval")]),s._v(" "),e("li",[s._v("TSDB")]),s._v(" "),e("li",[s._v("HTTPserver")])])])]),s._v(" "),e("p",[s._v("Prometheus Serverは読んで字のごとく、監視ツールPrometheusを実行するサーバです。内部はRetrivalとTSDBとHTTPserverで構成されており、Retrivalは「サービスディスカバリで監視対象のサーバを探し出し、exporterから監視情報を取得する」、TSDB(Time Series DataBase)は「取得した情報を時系列データとしてDBに保存する」(TSDBは時系列情報に特化したDBです)、HTTPserverは「DBにあるデータをWebUI上に表示させる」という役割を持っています。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(342),alt:"Prometheus_server"}})]),s._v(" "),e("ul",[e("li",[s._v("Prometheus Targets\n"),e("ul",[e("li",[s._v("exporter")]),s._v(" "),e("li",[s._v("Pushgateway")])])])]),s._v(" "),e("p",[s._v("Prometheus Tartgetsは監視情報を取得したい対象のサーバです。Pull型はこの対象にあるエージェントから監視情報を取得しますが、そのエージェントをexporterといいます。よく使われるプロダクトには典型的なメトリクスを開示するexporterが用意されており、例えばmysqlにはmysqld-exporterがあります。バッチジョブなどのPullした瞬間に結果が得られなかったり、すでに終了していて応答がない所謂Short-lived jobsはジョブ終了時の測定値をPushgatewayにPushすることで、PrometheusがPushgatewayから監視情報をPullします。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(343),alt:"Promethesu_targets"}})]),s._v(" "),e("ul",[e("li",[s._v("Alertmanager")])]),s._v(" "),e("p",[s._v("AlertmanagerはPrometheus ServerからPushされたAlertを各ツール(slack,mailなど)へ通知することが出来ます。(メールサーバなど外部ツールとの連携を必要とするため、今回はこの箇所のハンズオンは飛ばしています。)")]),s._v(" "),e("p",[e("img",{attrs:{src:a(344),alt:"Alertmanager"}})]),s._v(" "),e("ul",[e("li",[s._v("Data visualization and export\n"),e("ul",[e("li",[s._v("PromtheusWebUI")]),s._v(" "),e("li",[s._v("Grafana")])])])]),s._v(" "),e("p",[s._v("PrometheusWebUIならびにGrafanaはPrometheusに格納された時系列情報をPromQLという独自のクエリ言語で取得してWebUIに表示させます。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(345),alt:"data_visualization_and_export"}})]),s._v(" "),e("h3",{attrs:{id:"_2-3-prometheusハンズオン"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-prometheusハンズオン"}},[s._v("#")]),s._v(" 2-3. Prometheusハンズオン")]),s._v(" "),e("p",[s._v("ハンズオンは以下の流れで進めます。")]),s._v(" "),e("ol",[e("li",[s._v("PrometheusサーバとWebサーバを建て、node exporterを使ってパフォーマンス監視を行う")]),s._v(" "),e("li",[s._v("Grafanaを使ってパフォーマンス監視を可視化する")]),s._v(" "),e("li",[s._v("blackbox exporterを使って外部監視を行い、Grafanaで可視化する")])]),s._v(" "),e("p",[s._v("始める前に、ハンズオンで使ったコンテナを"),e("code",[s._v("docker stop")]),s._v("で止めておいてください。また、"),e("code",[s._v("docker ps")]),s._v("で余計なコンテナがないかを確認してください。(理由があって何かしらのコンテナを立てている場合はポートが被らないように適宜読み替えてください)")]),s._v(" "),e("p",[s._v("構成は以下になります。"),e("code",[s._v("docker-compose.yml")]),s._v("という名前でymlファイルを作り以下を書き込んでください。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("version: '3'\nservices:\n  prometheus:\n    image: prom/prometheus\n    container_name: prometheus\n    volumes:\n      - ./prometheus:/etc/prometheus\n    command: \"--config.file=/etc/prometheus/prometheus.yml\"\n    ports:\n      - 9090:9090\n    restart: always\n\n  grafana:\n    image: grafana/grafana:7.5.7\n    container_name: grafana\n    ports:\n      - 3000:3000\n    restart: always\n\n  wordpress_1:\n    image: wordpress:php8.0-apache\n    container_name: wordpress_1\n    ports:\n      - 8080:80\n    restart: always\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br")])]),e("p",[s._v("構成をネットワーク図にすると以下です。(ポートは順に対応してます)")]),s._v(" "),e("p",[e("img",{attrs:{src:a(346),alt:"default"}})]),s._v(" "),e("p",[s._v("次にPrometheusの設定ファイルを作ります。"),e("code",[s._v("docker-compose.yml")]),s._v("と同じディレクトリ内にファイルを格納するディレクトリを作り、中に設定ファイルを入れます。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# mkdir prometheus\n# cd prometheus\n# vim prometheus.yml\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("設定ファイルは以下の内容になります。")]),s._v(" "),e("ul",[e("li",[s._v("global：全体の設定")]),s._v(" "),e("li",[s._v("scrape_config：監視ターゲットに関する設定")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("global:\n  scrape_interval: 15s\n\nscrape_configs:\n  - job_name: 'node'\n    scrape_interval: 5s\n    static_configs:\n      - targets:\n        - 'wordpress_1:9100'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[s._v("次に監視対象のサーバに入れるエージェント(exporter)を入れます。まずはパフォーマンス監視を行いたいので、公式が出しているexporter「Node exporter」を"),e("code",[s._v("docker-compose.yml")]),s._v("が入っているディレクトリと同じ階層に用意します。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# cd ..\n# wget https://github.com/prometheus/node_exporter/releases/download/v1.1.2/node_exporter-1.1.2.linux-amd64.tar.gz\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("次に"),e("code",[s._v("docker-compose.override.yml")]),s._v("を作り、wordpressサーバの上でNode exporterを起動させるようにします。")]),s._v(" "),e("blockquote",[e("p",[s._v("今回はwordpress_1コンテナの上で"),e("strong",[s._v("無理やり")]),s._v("Node exporterを起動させていますが、コンテナのみを監視する際は「container exporter」を使うのが定石です。\n今回は後に出てくる外部監視を理解しやすくするため、コンテナ一つ一つをサーバ(node)として見立てて扱っているので、このような形式を取っています。")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("version: '3'\nservices:\n  wordpress_1:\n    ports:\n      - 9100:9100\n    volumes:\n      - ./node_exporter-1.1.2.linux-amd64.tar.gz:/root/node_exporter-1.1.2.linux-amd64.tar.gz\n    working_dir: /root\n    command: >\n      bash -c \"service apache2 start &&\n      tar xvfz node_exporter-1.1.2.linux-amd64.tar.gz &&\n      cd node_exporter-1.1.2.linux-amd64 &&\n      ./node_exporter\"\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[s._v("これで一通りの準備は完了しました。"),e("code",[s._v("docker-compose -f docker-compose.yml up -d")]),s._v("で"),e("code",[s._v("docker-compose.yml")]),s._v("を実行してコンテナを立ち上げてください。(うまく立ち上がらない方は"),e("code",[s._v("docker ps")]),s._v("や"),e("code",[s._v("docker logs")]),s._v("を使って確認してください)")]),s._v(" "),e("p",[s._v("コンテナの立ち上げが完了したら、ブラウザから"),e("code",[s._v("http://<dockerホストのIP:8080>")]),s._v("でwordpressのサイトが表示させることを確認してください。(DBに接続していないので先に進めないのは仕様です)")]),s._v(" "),e("p",[e("img",{attrs:{src:a(347),alt:"wordpress"}})]),s._v(" "),e("p",[s._v("次にnode exporterの起動させます。"),e("code",[s._v("docker-compose up -d")]),s._v("を実行して"),e("code",[s._v("docker-compose.override.yml")]),s._v("を上書き実行させます。prometheusはnode exporterに対してhttpでメトリクスを取りに行きますが、ブラウザからも"),e("code",[s._v("http://<dockerホストのIP:9100>")]),s._v("から"),e("code",[s._v("Metrics")]),s._v("にアクセスすることでメトリクスを見ることができます。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(348),alt:"node_exporter"}})]),s._v(" "),e("p",[s._v("次にPrometheusでメトリクスを持ってこれていることを確認します。Prometheusサーバにブラウザから"),e("code",[s._v("http://<dockerホストのIP:9090>")]),s._v("に入り、"),e("code",[s._v("Status")]),s._v("から"),e("code",[s._v("Target")]),s._v("を選択し、wordpressのサーバがあればOKです。これ以外にも式ブラウザに「up」を入力するだけでも確認できます。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(349),alt:"status"}})]),s._v(" "),e("p",[s._v("ホーム画面からは好きなメトリックスを表示することが出来ます。試しに"),e("code",[s._v("node_memory_Active_bytes")]),s._v("を選択すれば、メモリの使用量が表示されます。時間がある方はプルダウンからどんな情報がとれるか見てみましょう。")]),s._v(" "),e("ul",[e("li",[s._v("例\n"),e("ul",[e("li",[s._v("up：監視ターゲット一覧")]),s._v(" "),e("li",[s._v("go_memstats_alloc_requests_total：Prometheusが利用しているメモリ使用量")])])])]),s._v(" "),e("p",[e("img",{attrs:{src:a(350),alt:"mem_metrics"}})]),s._v(" "),e("p",[s._v("このグラフ上では単純な計算も行えます。例えば先ほどメモリ使用量を出しましたが、メモリ使用率を出したい場合は総メモリで割れば出せます。そのため、"),e("code",[s._v("node_memory_MemTotal_bytes")]),s._v("で割る形で表示すればメモリ使用率が表示されます。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(351),alt:"mem_per"}})]),s._v(" "),e("p",[s._v("最後にGrafanaを使って、ナウでヤングな可視化を行います。"),e("code",[s._v("http://localhost:3000")]),s._v("にアクセスします。ID/PASSはadmin/adminです。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(352),alt:"grafana"}})]),s._v(" "),e("p",[s._v("次にPrometheusサーバの場所を設定し、Grafanaにデータを読み込ませます。"),e("code",[s._v("Configuration")]),s._v("(左の歯車マーク)から"),e("code",[s._v("data source")]),s._v("を選択し、"),e("code",[s._v("add data sorce")]),s._v("からPrometheusを選択。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(353),alt:"datasource"}})]),s._v(" "),e("p",[s._v("URLにPrometheusサーバである"),e("code",[s._v("http://prometheus:9090")]),s._v("を入力し、Accessを"),e("code",[s._v("Server(default)")]),s._v("にます。AccessはPrometheusへの接続元を選択します。ここではGrafanaサーバである"),e("code",[s._v("Server(default)")]),s._v("を選択していますが、セキュリティの都合で各端末のブラウザからしかPrometheusにアクセスできないような状況では、Accessを"),e("code",[s._v("Browser")]),s._v("にブラウザから見たPrometheusサーバを選択してください。docker network上でGrafanaサーバからPrometheusサーバは"),e("code",[s._v("http://prometheus:9090")]),s._v("でアクセスできるため、今回は表記になっています。最後に一番下の"),e("code",[s._v("save & test")]),s._v("でエラーが出なければOKです。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(354),alt:"access"}})]),s._v(" "),e("p",[s._v("次にダッシュボードを作っていきます。"),e("code",[s._v("Create")]),s._v("タブから"),e("code",[s._v("NewDashboard")]),s._v("を選択、"),e("code",[s._v("Add Panel")]),s._v("から知りたいメトリックスを選択します。とりあえずロードアベレージ(実行待ちタスクの平均)を1分間、5分間、15分間ので表示させます。"),e("code",[s._v("Metrics")]),s._v("から"),e("code",[s._v("node_load1")]),s._v("を選択。"),e("code",[s._v("+Query")]),s._v("をでクエリを追加し"),e("code",[s._v("node_load5")]),s._v("を選択。同様に"),e("code",[s._v("+ Query")]),s._v("でクエリを追加し"),e("code",[s._v("node_load15")]),s._v("を選択。右側の"),e("code",[s._v("Panel")]),s._v("から"),e("code",[s._v("Panel title")]),s._v("を編集し、最後に右上のApplyを押すことで、パネルに追加できます。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(355),alt:"load_average"}})]),s._v(" "),e("p",[s._v("これの繰り返しで自分だけのダッシュボードを作り上げていく形になります。")]),s._v(" "),e("p",[s._v("最後に、Grafanaの公式では、有志の手によってダッシュボードのテンプレートがいくつか用意されているので、今度はお手軽にいい感じのダッシュボードを作ります。まず"),e("a",{attrs:{href:"https://grafana.com/grafana/dashboards",target:"_blank",rel:"noopener noreferrer"}},[s._v("Grafana lab"),e("OutboundLink")],1),s._v("にアクセスして、"),e("a",{attrs:{href:"https://grafana.com/grafana/dashboards/13978?pg=dashboards&plcmt=featured-sub1",target:"_blank",rel:"noopener noreferrer"}},[s._v("Node Exporter Quickstart and Dashboard"),e("OutboundLink")],1),s._v("を選びます。ここにあるDashboardIDまたは生JSONファイルをメモし、Grafanaにインポートすることで、有志の作ったダッシュボードと同じ形式のダッシュボードを手元で開くことが出来ます。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(356),alt:"template"}})]),s._v(" "),e("p",[s._v("次のSTEPではHTTPでのアクセスを監視する、サービス監視を行います。パフォーマンス監視では監視対象のサーバにexporterを導入して、Prometheusサーバからメトリクスをpullしていましたが、ICMPやHTTPを使った監視はその手段が使えません。そのため、システム内部から監視を行うのではなく、外部から監視を行う「外部監視(External Monitoring)」という手段で監視します。")]),s._v(" "),e("p",[s._v("外部監視には「blackbox exporter」というexporterを使います。まずblackbox_exporterのコンフィグファイル"),e("code",[s._v("blackbox.yml")]),s._v("を作ります。"),e("code",[s._v("docker-compose.yml")]),s._v("があるディレクトリ配下で"),e("code",[s._v("blackbox.yml")]),s._v("を格納するディレクトリを作成します。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# mkdir blackbox_exporter\n# vim blackbox_exporter/blackbox.yml\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("設定ファイルは以下の内容にします。ここでは監視先のターゲットを指定しません。Prometheusのサービスディスカバリを使うため、ターゲットはPrometheus側で設定するためです。(ICMPなどの他監視方法も知りたい人は"),e("a",{attrs:{href:"https://github.com/prometheus/blackbox_exporter",target:"_blank",rel:"noopener noreferrer"}},[s._v("公式サイト"),e("OutboundLink")],1),s._v("を参照)。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('modules:\n  http_2xx:\n    prober: http\n    timeout: 20s\n    http:\n      valid_status_codes: []\n      method: GET\n      preferred_ip_protocol: "ip4"\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("次にblackbox_exporterのdocker imageを"),e("code",[s._v("docker-compose.yml")]),s._v("に追加します。ボリュームのマウントには先ほど追加したコンフィグファイルを指定します。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("version: '3'\nservices:\n  prometheus:\n    image: prom/prometheus\n    container_name: prometheus\n    volumes:\n      - ./prometheus:/etc/prometheus\n    command: \"--config.file=/etc/prometheus/prometheus.yml\"\n    ports:\n      - 9090:9090\n    restart: always\n\n  grafana:\n    image: grafana/grafana:7.5.7\n    container_name: grafana\n    ports:\n      - 3000:3000\n    restart: always\n\n  wordpress_1:\n    image: wordpress:php8.0-apache\n    container_name: wordpress_1\n    ports:\n      - 8080:80\n    restart: always\n\n  blackbox_exporter:\n    image: prom/blackbox-exporter\n    container_name: blackbox_exporter\n    ports:\n      - 9115:9115\n    volumes:\n      - ./blackbox_exporter/blackbox.yml:/etc/blackbox_exporter/config.yml\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br")])]),e("p",[s._v("最後にPrometheusのコンフィグファイル"),e("code",[s._v("prometheus.yml")]),s._v("に監視対象を追加します。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("global:\n  scrape_interval: 15s \n\nscrape_configs:\n  - job_name: 'node'\n    scrape_interval: 5s\n    static_configs:\n      - targets:\n        - 'wordpress_1:9100'\n\n  - job_name: 'prometheus'\n    scrape_interval: 5s\n    static_configs:\n      - targets:\n         - 'localhost:9090'\n\n  - job_name: 'blackbox'\n    scrape_interval: 30s\n    scrape_timeout: 20s\n    metrics_path: /probe\n    params:\n      module: [http_2xx]\n    static_configs:\n      - targets:\n        - http://wordpress_1\n    relabel_configs:\n      - source_labels: [__address__]\n        target_label: __param_target\n      - source_labels: [__param_target]\n        target_label: instance\n      - target_label: __address__\n        replacement: blackbox_exporter:9115\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br")])]),e("p",[e("code",[s._v("relabel_configs")]),s._v("の箇所ではblackbox_exporter自身のラベルを監視対象のラベルに置き換えてます。これをしないとPrometheusに収集されるデータがwordpressに関するものではなく、blackbox_exporterのものだと判断されてしまいます。")]),s._v(" "),e("p",[s._v("これで準備は完了です。"),e("code",[s._v("docker-compose up -d")]),s._v("でblackbox_exporterを起動させたのち、"),e("code",[s._v("docker-compose restart prometheus")]),s._v("でprometheusのコンフィグファイルを再読み込みしてください。"),e("code",[s._v("localhost:9090")]),s._v("でPrometheusサーバにアクセスし、StatusからTartgetを表示し、blackboxが存在すれば成功です。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(357),alt:"blackbox_exporter"}})]),s._v(" "),e("p",[s._v("本当にPrometheusが取得できているかグラフを表示させてみましょう。まずPrometheusホーム画面の"),e("code",[s._v("Expression")]),s._v("に"),e("code",[s._v("probe_success")]),s._v("と入力し、"),e("code",[s._v("Excute")]),s._v("を押してください。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(358),alt:"probe_success_table"}})]),s._v(" "),e("p",[s._v("タブをTableからGraphにし、値が"),e("code",[s._v("1")]),s._v("になっていれば成功です。"),e("code",[s._v("0")]),s._v("は取得に失敗しています。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(359),alt:"probe_success"}})]),s._v(" "),e("p",[s._v("他にも"),e("code",[s._v("probe_http_status_code")]),s._v("を使えばそのサイトのHTTPステータスコードを確認できます。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(360),alt:"probe_status"}})]),s._v(" "),e("p",[s._v("最後にGrafanaでHTTPステータスコードを表示して終わりにします。Grafanaを"),e("code",[s._v("localhost:3000")]),s._v("で開き、追加したいダッシュボードを選択します。\n次に"),e("code",[s._v("Add Panel")]),s._v("からパネル追加画面を開き、"),e("code",[s._v("Metrics")]),s._v("に"),e("code",[s._v("probe_http_status_code")]),s._v("と入力します。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(361),alt:"grafana_status_graph"}})]),s._v(" "),e("p",[s._v("このままだとステータスコードの数字をグラフにしてるだけで味気ないので、"),e("code",[s._v("Instant")]),s._v("をONにし、右のカラムの"),e("code",[s._v("Visualization")]),s._v("を"),e("code",[s._v("Stat")]),s._v("に変更します。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(362),alt:"grafana_status"}})]),s._v(" "),e("p",[s._v("最後にステータスコードごとに色を変えます。右のカラムのタブを"),e("code",[s._v("Field")]),s._v("にし、"),e("code",[s._v("Thresholds")]),s._v("を開きます。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(363),alt:"thresholds"}})]),s._v(" "),e("p",[s._v("既存の設定は削除し、"),e("code",[s._v("300")]),s._v("を黄色、"),e("code",[s._v("400")]),s._v("を赤とします。このように設定することでこの値を閾値として、HTTPステータスコードが値を超えると値の色が変ります。下の画像では「ベースは赤(ここでは200未満)」「200以上300未満は青」「300以上400未満は黄色」「400以上は赤」となるように設定しています。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(364),alt:"http_status"}})]),s._v(" "),e("p",[s._v("試しにwordpressの中身を書き換えてみましょう。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# docker exec -it wordpress_1 mv /var/www/html/wp-admin /var/www/html/wp-admins\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("を実行すればWebサーバの中身が書き換えられ、HTTPステータスコードが500になり、赤くなるはずです。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(365),alt:"http_status"}})]),s._v(" "),e("p",[s._v("最後に"),e("code",[s._v("Apply")]),s._v("することで簡単な監視ダッシュボードが完成しました。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(366),alt:"all"}})]),s._v(" "),e("h3",{attrs:{id:"_2-4-まとめ"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-まとめ"}},[s._v("#")]),s._v(" 2-4. まとめ")]),s._v(" "),e("p",[s._v("Prometheusは非常に柔軟性の高い有力なツールです。実は今回の講義ではPrometheusの持つ機能の一つであるサービスディスカバリの恩恵を最大限体験することが出来ていません。ほかにも閾値を超えたらアラートを投げるAlertmanagerなど、重要な機能がまだまだたくさんありますが、dockerにて用意する環境に限界があるため、今回は省略しました。Kubernetes上ではサービスディスカバリやAlertmanagerを比較的簡単に体験することができるため、興味のある方は"),e("a",{attrs:{href:"https://prometheus.io/",target:"_blank",rel:"noopener noreferrer"}},[s._v("公式サイト"),e("OutboundLink")],1),s._v("などを参考に、体験してみてください。")]),s._v(" "),e("h2",{attrs:{id:"_3-最後に"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-最後に"}},[s._v("#")]),s._v(" 3. 最後に")]),s._v(" "),e("p",[s._v("本講義では「監視そのものの概念説明」から「実際に監視システムを構築する」ところまでを簡単に紹介しました。今回Prometheusをハンズオンにて使用しましたが、Prometheusは決して銀の弾丸にはなりえないということに注意してください。これまでの章で紹介をしましたがツール依存は代表的なアンチパターンです。監視しなければならない対象を明確にし、必要な機能を組み合わせて(時には自分で開発して)監視システムを構築する必要があります。")]),s._v(" "),e("blockquote",[e("p",[s._v("例えばSRE(Site Reliability Engineering)という考えのエンジニアリング手法では「ユーザに対するサービスレベルの定義」がとても重要になります。サービスレベルを客観的に評価してサービス品質を継続改善するために、指標であるSLI(Indicator)、SLIから算出される目標値であるSLO(Objectives)、そして必要に応じて契約としての合意であるSLA(Agreement)が定義されます。測定できないことは評価することができないため、監視システムが重要視されます。（評価できないと、システムが良いのか悪いのか、良くなったのか悪くなったのか、がわからないので、次のアクションを取ることができません）")])]),s._v(" "),e("p",[s._v("監視という概念について詳しく知りたい方はオーライリーの「入門 監視」を読んでみるといいと思います。Prometheusについてもっと詳しく知りたい方はまだまだ日本語のドキュメントが充実していないため、手探りにはなりますが公式サイトを漁ってみたり、「Prometheus Meetup(JP)」などに参加して導入事例を聞いてみるといいと思います。一応「入門Prometheus」という本が出ています。")]),s._v(" "),e("blockquote",[e("p",[s._v("参考文献")]),s._v(" "),e("ol",[e("li",[s._v("入門 監視/Mike Julian(オーライリージャパン)")]),s._v(" "),e("li",[s._v("わかばちゃんと学ぶサーバー監視/湊川あい(C&R研究所)")]),s._v(" "),e("li",[s._v("SREサイトリライアビリティエンジニアリング/Betsy Beyer,Chris Jones,Jennifer Petoff,Niall Richard Murphy(オーライリージャパン)")]),s._v(" "),e("li",[s._v("クラウドネイティブ・アーキテクチャ/Tom Laszewki,Kamal Arora,Erik Farr,Piyum Zonooz(インプレス)")])])])],1)}),[],!1,null,null,null);e.default=r.exports}}]);