(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{460:function(a,t,v){"use strict";v.r(t);var r=v(10),e=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"フロントエンド-overview"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#フロントエンド-overview"}},[a._v("#")]),a._v(" フロントエンド Overview")]),a._v(" "),t("h2",{attrs:{id:"はじめに"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#はじめに"}},[a._v("#")]),a._v(" はじめに")]),a._v(" "),t("p",[a._v("このOverviewではWebサービスにおけるフロントエンドとして、主にWebブラウザ上でHTMLとJavaScriptで動作するアプリケーションについて歴史や最近の状況を紹介します。\n昨今ではユーザインタフェースとしてスマホアプリなども多いですが、残念ながらここでは取り扱いません。")]),a._v(" "),t("p",[a._v("またフロントエンドアプリケーションの基礎として、簡単なDOM操作についても紹介します。\n簡単なコードを書いてもらいますが、全て手元のテキストファイルとブラウザで動作するため、Dockerなどの環境構築は不要です。")]),a._v(" "),t("h2",{attrs:{id:"簡単な歴史"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#簡単な歴史"}},[a._v("#")]),a._v(" 簡単な歴史")]),a._v(" "),t("h3",{attrs:{id:"webブラウザ"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webブラウザ"}},[a._v("#")]),a._v(" Webブラウザ")]),a._v(" "),t("p",[a._v("フロントエンドアプリケーションとWebブラウザは切っても切り離せない環境にあります。\nJavaScriptの大本はNetscapeというブラウザに実装された「LiveScript」という仕組みで、動的にHTMLを操作するためのものでした。\nその後各ブラウザが同じような仕組みとしてJavaScriptの実装を進めましたが、当初は標準仕様などなく、各ブラウザで挙動がバラバラでした。\nそのバラバラな挙動を解決するために爆発的に流行ったのがjQueryというライブラリです。")]),a._v(" "),t("p",[a._v("ブラウザの歴史について詳しくはこちらの資料を見てみてください。")]),a._v(" "),t("p",[t("a",{attrs:{href:"/bootcamp/frontend_overview.pdf"}},[a._v("ブラウザ史の紹介")])]),a._v(" "),t("h3",{attrs:{id:"ajaxとspa"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ajaxとspa"}},[a._v("#")]),a._v(" AjaxとSPA")]),a._v(" "),t("p",[a._v("JavaScriptは最初の頃、HTMLを操作してちょっとした動きをつけるために使われていました。\nその状況を一変させたのがGoogleMapやGmailの登場です。これらのツールはAjaxと呼ばれる非同期通信でページをリロードしなくても表示されているデータを更新してみせました。")]),a._v(" "),t("p",[a._v("画面をリロードせずにデータを更新し表示を次々に切り替えることができるようになると、ブラウザ上でまるでデスクトップツールのような体験を実装することができるようになります。これがいわゆる「Webアプリケーション」の始まりなのかもしれません。")]),a._v(" "),t("p",[a._v("JavaScriptによる画面の更新はページ切り替えに比べて高速なため、そのうちページの切り替えも全てJavaScriptで実装した方がユーザ体験が良くなります。\nこうして全てのページを1枚のHTMLとJavaScriptで実装したアプリケーションをSPA(single page application)と呼び、積極的に開発されるようになりました。")]),a._v(" "),t("h3",{attrs:{id:"spaフレームワークの流行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spaフレームワークの流行"}},[a._v("#")]),a._v(" SPAフレームワークの流行")]),a._v(" "),t("p",[a._v("SPAはユーザ体験がいいのですが、全てのページ遷移と画面の書き換え、データ取得をJavaScriptとHTMLで実装する必要があり、非常に複雑になります。\nそこでその実装を助けるために数々のSPAフレームワークが開発され、現在に至るまでWebアプリケーション開発の中心分野となっています。")]),a._v(" "),t("p",[a._v("有名どころは以下の３大と呼ばれるフレームワークでしょうか。")]),a._v(" "),t("ul",[t("li",[a._v("Angular (angular.js)")]),a._v(" "),t("li",[a._v("React")]),a._v(" "),t("li",[a._v("Vue")])]),a._v(" "),t("p",[a._v("一時期は次々と新しいフレームワークやツールが開発されカオスの様相を呈していたのですが、最近は落ち着きつつあります。\n感覚としては")]),a._v(" "),t("ul",[t("li",[a._v("大規模な開発はReact+α")]),a._v(" "),t("li",[a._v("小規模開発はVueやsvelteなどの軽量フレームワーク")]),a._v(" "),t("li",[a._v("パッケージ管理はnpm or yarn")]),a._v(" "),t("li",[a._v("webpackなどのバンドラーツールは直接導入せず、フレームワーク側で用意されるビルドツールを利用する")])]),a._v(" "),t("p",[a._v("といったところでしょうか。\nもちろんツールの選定基準は要求やチームの状況、開発者の好みによって異なるため、上記は一般的な傾向の話です。")]),a._v(" "),t("h3",{attrs:{id:"その他のツールなど"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#その他のツールなど"}},[a._v("#")]),a._v(" その他のツールなど")]),a._v(" "),t("h4",{attrs:{id:"ssr"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ssr"}},[a._v("#")]),a._v(" SSR")]),a._v(" "),t("p",[a._v("SPAはほぼ何も書かれていないHTMLをJavaScriptで動的に書き換えることで実現します。\nしかしGoogle検索のための情報を集めているクローラーはJavaScriptを実行しないため、SPAで作られたサイトはSEO的に不利とされています。")]),a._v(" "),t("p",[a._v("そこでサーバサイドでnode.jsを動かし、その上である程度ページをレンダリングしてからブラウザに返すというSSR(server side rendering)という手法が行われています。\nVueやReactなどにはSSR用のライブラリが存在しており、SSRでの生成と表示後の動的な書き換えそれぞれをスムーズに実装できるようになっています。")]),a._v(" "),t("p",[a._v("SSRはSEO対策だけでなく、初期読み込み時の何も表示されない時間を減らすなど、ユーザ体験向上にも有効です。\n一方でSEO対策がほぼ不要で初期読み込みよりも利用中の挙動を優先するWebサービスの管理画面では、これまで通りSPAが有効です。")]),a._v(" "),t("h4",{attrs:{id:"wasm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#wasm"}},[a._v("#")]),a._v(" wasm")]),a._v(" "),t("p",[a._v("最近ではC言語やRust, Goなどで書かれたプログラムをバイナリファイルにコンパイルし、それをブラウザ上で動作させるwasmという仕組みが存在します。\nJavaScriptのコードはどうしてもパフォーマンスに限界がありますが、wasmの場合はほぼネイティブコンパイルされたプログラムと同じようなパフォーマンスで動作させることができます。\n問題になったBitcoinのマイニングプログラムや機械学習系など、CPUパワーが必要な場合に利用されます。")]),a._v(" "),t("h2",{attrs:{id:"javascript体験"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#javascript体験"}},[a._v("#")]),a._v(" JavaScript体験")]),a._v(" "),t("p",[a._v("今回はjQueryを利用し、DOMを書き換える体験をしてみましょう。")]),a._v(" "),t("p",[t("a",{attrs:{href:"/bootcamp/frontend/jquery"}},[a._v("DOMとjQuery")])]),a._v(" "),t("credit-footer")],1)}),[],!1,null,null,null);t.default=e.exports}}]);