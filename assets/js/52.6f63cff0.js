(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{554:function(e,r,t){"use strict";t.r(r);var v=t(16),_=Object(v.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("header-table"),e._v(" "),r("h1",{attrs:{id:"page-frontmatter-title"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#page-frontmatter-title"}},[e._v("#")]),e._v(" "+e._s(e.$page.frontmatter.title))]),e._v(" "),r("h2",{attrs:{id:"はじめに"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#はじめに"}},[e._v("#")]),e._v(" はじめに")]),e._v(" "),r("p",[e._v("Dockerは、当初 Docker Inc. によって開発され、現在は Mirantis を中心にコミュニティと共に保守・開発が続けられている、コンテナ型の仮想環境プラットフォームです。\nコンテナとは、1台のコンピュータ上で複数のアプリケーションを分離して動かすための、軽量かつ高速な仮想化技術のひとつです。")]),e._v(" "),r("p",[e._v("Dockerを利用することで、アプリケーションとその依存関係を「コンテナ」と呼ばれる独立した実行環境としてパッケージ化し、どこでも同じように動作させることができます。")]),e._v(" "),r("p",[e._v("では、「コンテナ」と「仮想マシン」には、どのような違いがあるのでしょうか？")]),e._v(" "),r("p",[e._v("従来の仮想マシンでは、ホストOS上に仮想化ソフトウェア（例：VirtualBox、VMwareなど）を動かし、その中でゲストOSを実行します。\n一方、コンテナはホストOSのカーネルを共有しつつ、独立したユーザー空間を構築することで、軽量で高速な実行環境を提供します。")]),e._v(" "),r("h3",{attrs:{id:"本講義の目的"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#本講義の目的"}},[e._v("#")]),e._v(" 本講義の目的")]),e._v(" "),r("ul",[r("li",[e._v("Dockerについての基礎的な知識と仕組みを理解する")]),e._v(" "),r("li",[e._v("Dockerfile および "),r("code",[e._v("docker")]),e._v(" コマンドを使って、コンテナの作成・操作を体験する")])]),e._v(" "),r("h4",{attrs:{id:"本講義で扱わないこと"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#本講義で扱わないこと"}},[e._v("#")]),e._v(" 本講義で扱わないこと")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("docker")]),e._v(" コマンドのすべてのオプション解説")]),e._v(" "),r("li",[e._v("コンテナイメージのレイヤー構造などの詳細な内部仕様")])]),e._v(" "),r("h3",{attrs:{id:"本講義の目標"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#本講義の目標"}},[e._v("#")]),e._v(" 本講義の目標")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("docker")]),e._v(" コマンドを使って、コンテナの取得・起動・停止ができるようになる")]),e._v(" "),r("li",[e._v("Dockerfileの基本的な書き方・読み方を理解し、自分の目的に応じてコンテナを構築できるようになる")])]),e._v(" "),r("h3",{attrs:{id:"docker-とは"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#docker-とは"}},[e._v("#")]),e._v(' "Docker" とは')]),e._v(" "),r("p",[e._v('ここで扱う "Docker" とは、コンテナ仮想化プラットフォームおよびその周辺ツール群を指します。')]),e._v(" "),r("p",[e._v("以下はDockerを扱う上で基本となる概念です。")]),e._v(" "),r("ul",[r("li",[r("p",[r("strong",[e._v("Docker コンテナ")]),e._v("\nアプリケーションとその実行環境をパッケージ化したもの。OSやハードウェアに依存せず、どこでも同じ動作を再現できます。")])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("Docker イメージ")]),e._v("\nコンテナの元となるファイルシステムのテンプレート。アプリケーションとその依存ファイル、設定が含まれており、Dockerfileを用いて構築します。")])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("コンテナオーケストレーション")]),e._v("\n複数のコンテナを効率よく展開・管理する仕組み。シンプルな構成管理には "),r("code",[e._v("docker compose")]),e._v(" を、より大規模なシステムには "),r("code",[e._v("Kubernetes")]),e._v("（k8s）がよく利用されます。")]),e._v(" "),r("p",[e._v("※ 本講義では "),r("code",[e._v("docker compose")]),e._v("（Docker Compose v2 以降）を前提とします。従来の "),r("code",[e._v("docker-compose")]),e._v("（v1）は非推奨です。")])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("イメージの共有と配布")]),e._v("\nDocker Hub や GitHub Container Registry などのリポジトリを通じて、コンテナイメージを共有・再利用できます。")])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("OCI (Open Container Initiative)")]),e._v("\n現在、コンテナ技術は OCI により標準化されており、Dockerはその仕様に準拠した実装のひとつです。Podmanやcontainerdなども同様にOCI準拠です。")])])]),e._v(" "),r("p",[e._v("本講義では「Dockerコンテナ」と「Dockerイメージ」の操作を中心に学習を進めていきます。\n「コンテナオーケストレーション」については、後続の "),r("code",[e._v("docker compose")]),e._v(" の講義で触れます。")]),e._v(" "),r("h3",{attrs:{id:"講義の進め方"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#講義の進め方"}},[e._v("#")]),e._v(" 講義の進め方")]),e._v(" "),r("p",[e._v("この講義は、Dockerがあらかじめインストールされている環境を前提としています。\n未インストールの場合は、事前準備ガイド「ハンズオン事前準備」に従ってセットアップを済ませてください。")]),e._v(" "),r("blockquote",[r("p",[e._v("💡 注意：Docker Desktop は商用利用に制限があります。Linux では "),r("code",[e._v("docker-ce")]),e._v(" や "),r("code",[e._v("podman")]),e._v(" などの代替も検討してください。")])]),e._v(" "),r("h2",{attrs:{id:"chapters"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#chapters"}},[e._v("#")]),e._v(" Chapters")]),e._v(" "),r("ul",[r("li",[r("RouterLink",{attrs:{to:"/development/docker/docker/GETSTART.html"}},[e._v("Dockerコンテナで仮想環境プラットフォームを構築する")])],1),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/development/docker/docker/RUN_AS_IMAGE.html"}},[e._v("Dockerコンテナイメージを作成して起動する")])],1),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/development/docker/docker/OPERATION.html"}},[e._v("Dockerコンテナの管理")])],1),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/development/docker/docker/BUILD.html"}},[e._v("Dockerイメージの作成")])],1)]),e._v(" "),r("h2",{attrs:{id:"参考"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),r("h3",{attrs:{id:"仮想マシン-vs-コンテナ"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#仮想マシン-vs-コンテナ"}},[e._v("#")]),e._v(" 仮想マシン vs コンテナ")]),e._v(" "),r("p",[e._v("仮想マシンとコンテナ、どちらが「優れている」というよりは、それぞれ用途や目的に応じた使い分けが重要です。")]),e._v(" "),r("p",[e._v("コンテナは、仮想マシンよりも軽量かつ高速な環境構築が可能であり、CI/CDやマイクロサービスアーキテクチャとの相性が良いのが特徴です。\nただし、仮想マシンのように完全に分離された環境を必要とする場合は、VMの方が適していることもあります。")]),e._v(" "),r("p",[e._v("例）")]),e._v(" "),r("ul",[r("li",[e._v("コンテナ：Linux 上で Linux アプリケーションを高速起動したい")]),e._v(" "),r("li",[e._v("仮想マシン：Linux 上で Windows アプリケーションを実行したい")])]),e._v(" "),r("h3",{attrs:{id:"docker-のアーキテクチャ"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#docker-のアーキテクチャ"}},[e._v("#")]),e._v(" Docker のアーキテクチャ")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://docs.docker.com/get-started/images/docker-architecture.webp",alt:"Docker Image"}})]),e._v(" "),r("h3",{attrs:{id:"docker-hubのレート制限について"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#docker-hubのレート制限について"}},[e._v("#")]),e._v(" Docker Hubのレート制限について")]),e._v(" "),r("p",[e._v("Docker Hub には、匿名ユーザでのpull操作に対してレート制限（1時間に最大100回）が設けられています。大量にpullする場合は "),r("code",[e._v("docker login")]),e._v(" を行うことで制限緩和されます。")]),e._v(" "),r("h3",{attrs:{id:"セキュリティの観点-発展"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#セキュリティの観点-発展"}},[e._v("#")]),e._v(" セキュリティの観点（発展）")]),e._v(" "),r("p",[e._v("実務では、以下のセキュリティ対策が重要です：")]),e._v(" "),r("ul",[r("li",[e._v("コンテナイメージの脆弱性スキャン："),r("code",[e._v("trivy")]),e._v(", "),r("code",[e._v("dockle")]),e._v(", "),r("code",[e._v("Grype")]),e._v(" などのツール")]),e._v(" "),r("li",[e._v("Dockerfileでの "),r("code",[e._v("USER")]),e._v(" 指定（root実行の回避）")])]),e._v(" "),r("h3",{attrs:{id:"発展-dockerとwebassembly-wasm"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#発展-dockerとwebassembly-wasm"}},[e._v("#")]),e._v(" 発展：DockerとWebAssembly（WASM）")]),e._v(" "),r("p",[e._v("近年は Docker が WebAssembly（WASM）との統合にも対応し始めており、軽量かつクロスプラットフォームな実行環境として注目されています。")]),e._v(" "),r("credit-footer")],1)}),[],!1,null,null,null);r.default=_.exports}}]);